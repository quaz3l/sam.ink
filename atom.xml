<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Sam Schooler]]></title>
  <subtitle><![CDATA[Sand Castle Builder]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="https://sam.ink/"/>
  <updated>2016-02-05T03:59:19.000Z</updated>
  <id>https://sam.ink/</id>
  
  <author>
    <name><![CDATA[Sam Schooler]]></name>
    <email><![CDATA[hello@sam.ink]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[SplashDrop]]></title>
    <link href="https://sam.ink/projects/splashdrop/"/>
    <id>https://sam.ink/projects/splashdrop/</id>
    <published>2016-02-05T03:38:00.000Z</published>
    <updated>2016-02-05T03:59:19.000Z</updated>
    <content type="html"><![CDATA[<img src="/projects/splashdrop/cover.png" alt="cover.png" title="">
<p><a href="https://splashdrop.sam.ink" target="_blank" rel="external">SplashDrop</a> is a free service which uploads unsplash.com photos to be used however you want. The photos are replaced everyday.</p>
<p><span id="setup"></span></p>
<h2 id="Setting_Your_Desktop_Wallpaper_to_SplashDrop"><a href="#Setting_Your_Desktop_Wallpaper_to_SplashDrop" class="headerlink" title="Setting Your Desktop Wallpaper to SplashDrop"></a>Setting Your Desktop Wallpaper to SplashDrop</h2><p>In order to have a set of desktop wallpapers that update everyday, you must first <a href="https://splashdrop.com/authorize" target="_blank" rel="external">Authorize SplashDrop to access your Dropbox</a> via the SplashDrop website. Then, make sure to install the dropbox client on your computer.<br>Then go to <strong>System Preferences -&gt; Desktops &amp; Screensavers</strong>.  </p>
<p>Click on the “+” in the bottom left corner.  </p>
<p>Navigate to <strong>your Dropbox folder/Apps/SplashDrop</strong>.  </p>
<p>Click “Choose”.  </p>
<p>Check the box at the bottom of the window next to “Change picture:”  </p>
<p>Change the period to “Ever day”  </p>
<p>You are done! You now will have new wallpapers on all of your screens everyday!</p>
]]></content>
    <summary type="html">
    <![CDATA[<img src="/projects/splashdrop/cover.png" alt="cover.png" title="">
<p><a href="https://splashdrop.sam.ink" target="_blank" rel="external">S]]>
    </summary>
    
      <category term="Projects" scheme="https://sam.ink//projects/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[University of Denver]]></title>
    <link href="https://sam.ink/travel/2015/du-quarter-one/"/>
    <id>https://sam.ink/travel/2015/du-quarter-one/</id>
    <published>2015-11-30T05:54:55.000Z</published>
    <updated>2015-12-18T23:36:56.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="Travel" scheme="https://sam.ink//travel/"/>
    
      <category term="2015" scheme="https://sam.ink//travel/2015/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RollerBakers]]></title>
    <link href="https://sam.ink/projects/rollerbakers/"/>
    <id>https://sam.ink/projects/rollerbakers/</id>
    <published>2015-11-17T21:32:00.000Z</published>
    <updated>2015-12-22T21:13:04.000Z</updated>
    <content type="html"><![CDATA[<img src="/projects/rollerbakers/cover.png" alt="cover.png" title="">
<p>RollerBakers was born out of a need for spending money. My dorm room had a kitchen in it, and I loved to baked so I thought: Why not make the most of this. I created <a href="https://rollerbakers.com" target="_blank" rel="external">https://rollerbakers.com</a> a cookie delivery service which delivers freshly baked cookies directly to your dorm room.</p>
<p>I wanted to get the site up as soon as possible, so I made the website as simple as possible. I quickly designing, and coding the frontend with a minimal design, and form validation. I also made a simple backend in Node.js which receives orders and forwards them to my email. This took me about 10 hours to finalize over 2 days.</p>
<p>The next day, I went to Walgreens on my longboard and purchased a Square credit card reader. I then created a Square account. Square reimburses you for buying a Square Reader, so I got my $10 back. I then went to Safeway and bought a few rolls of cookie dough. I wanted to end up making my own cookies from scratch, but I wanted to prove my idea worked before I went all in and bought ingredients in bulk. I also made a word document with crude advertisements printed it out, and spread them around different floors of my dorm. I was in business.</p>
<p>The first order came from a girl on one floor below me. She order 6 cookies. I grabbed 6 cookies, and my rollerblades (to keep up appearances) and delivered them. The girl who ordered the cookies and her friend were so surprised when I actually showed up. After talking for a bit about how my business works, I went on my way.</p>
<p>Lucky for me, the first weekend was Halloween, and everyone had a sweet tooth. With the profits from the first night, I purchased bulk ingredients which, if I made a batch of 18 cookies a day, will last me a week and a half before I need butter and eggs, and chocolate chips. I then made a batch Friday night, and tried a different strategy: rollerblading around selling cookies on the street. That worked well. At the end of Friday I had sold 35 cookies, done 4 deliveries, and collected $34.65.</p>
<p>I did this for 4 weeks and at the end of the quarter I had sold over 400 cookies. Over winter break, I created an updated version of <a href="https://rollerbakers.com" target="_blank" rel="external">https://rollerbakers.com</a>, and will launch it on January 3rd, a day before school starts up again.</p>
<p>This version has a much more professional design and the backend is much more maintainable. The backend is written in Node.js, with Express for the web framework, and MongoDB to hold orders, cookie types, and customer info. I also integrated Braintree Payments in order to process credit cards online.</p>
]]></content>
    <summary type="html">
    <![CDATA[<img src="/projects/rollerbakers/cover.png" alt="cover.png" title="">
<p>RollerBakers was born out of a need for spending money. My dorm roo]]>
    </summary>
    
      <category term="Projects" scheme="https://sam.ink//projects/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Adulthood]]></title>
    <link href="https://sam.ink/blog/2015/adulthood/"/>
    <id>https://sam.ink/blog/2015/adulthood/</id>
    <published>2015-04-10T02:15:56.000Z</published>
    <updated>2015-12-17T18:04:35.000Z</updated>
    <content type="html"><![CDATA[<p>“Hello my name is Sam Schooler, and I don’t know how old I am,” Sam admitted as he walked into <strong>Children’s Anonymous</strong>, a group which helps support adults who have not yet crossed the barrier from childhood to adulthood.</p>
<p>“I started going to this group a while back.” Sam told our reporter, “What I didn’t realize is that the group saw being a child as a flaw. I don’t see being a child as a flaw, I see it as an opportunity. An opportunity for me to do things adults my age would never think of doing.”</p>
<p>Sam went to the group only 3 or 4 times before he had enough, and “just kinda stopped going, and started watching clouds and stuff.” We were not satisfied. In this unique situation, we wanted to know more. We asked him about his experience once he accepted the fact he will be a child for the foreseeable future. “I think I will try to get more people to be children. That seems fun. A sort of group that supports older children.”<br><a id="more"></a><br>“What makes me different from adults my age is that I know there is more to life than just getting a job, making money, having a family, retiring, and dying. I intend to enjoy life, so instead of trying to go find money, power or glory; I try and find the fun in the world. Keep in mind, this does not mean I’m just going to play in the park everyday. I am now a child with more privileges. I can travel, possibly learn about the migration habits of salmon, go biking long distances, or go swimming at night.”</p>
<p>This is a profound difference from what normal lives are supposed to be. We wanted to figure out how he plans to support this lifestyle without the support of his parents.</p>
<p>“Simple. Get a job. It does not seem like something a child would do. But, just like when I lived with my parents, I needed to do chores before I could go outside to play. Same concept with a job; I need to work before I can play. I’ll also let you in on a little secret,” Sam leaned in quietly, looking around before whispering, “Your job and school don’t need to be boring…just learn and work with things you like!”</p>
<p>We were truly excited about this new way to think about life. We pushed on. Learning how he could possibly plan to do these things in a world of businessmen, and scams. He explain that: “Learn how to be the red marble in a bag of blue. Be the person others will seek out to have a great experience skydiving on a whim, biking with no destination, or searching for a treasure not meant to be found.”</p>
<p>“But, what about everyday life?” one of our reported asked.</p>
<p>Sam grinned at this question, “The key to making everyday life extraordinary is to not care what anyone else thinks of you, and to hold your head high. Make sure to keep your feet on the ground, but the sky is the limit. You don’t need to follow society, make them follow you. You don’t need to seek out an extraordinary life; do things you love, and your life will naturally become just that.”</p>
<p>On our way out the door of our single floor ‘90s era suburban news station, we asked him one more question: “If you could give one piece of advice to someone who wants to be a child again, what would it be?”</p>
<p>He told us. He said that “the secret to being a child is that everyone is. The only way that you become an adult is when your mind tells you that the things you normally do to have fun are too ridiculous. Go live life. Don’t call yourself an adult, and don’t listen to anyone who tells you to grow up.”</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>“Hello my name is Sam Schooler, and I don’t know how old I am,” Sam admitted as he walked into <strong>Children’s Anonymous</strong>, a group which helps support adults who have not yet crossed the barrier from childhood to adulthood.</p>
<p>“I started going to this group a while back.” Sam told our reporter, “What I didn’t realize is that the group saw being a child as a flaw. I don’t see being a child as a flaw, I see it as an opportunity. An opportunity for me to do things adults my age would never think of doing.”</p>
<p>Sam went to the group only 3 or 4 times before he had enough, and “just kinda stopped going, and started watching clouds and stuff.” We were not satisfied. In this unique situation, we wanted to know more. We asked him about his experience once he accepted the fact he will be a child for the foreseeable future. “I think I will try to get more people to be children. That seems fun. A sort of group that supports older children.”<br>]]>
    
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2015" scheme="https://sam.ink//blog/2015/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Gean]]></title>
    <link href="https://sam.ink/blog/2015/gean/"/>
    <id>https://sam.ink/blog/2015/gean/</id>
    <published>2015-01-05T19:10:00.000Z</published>
    <updated>2015-12-19T00:10:14.000Z</updated>
    <content type="html"><![CDATA[<p>Should I even start writing these poems?<br>What are they for?<br>What do they mean?<br>Maybe I’ll rap or tell them to Gean.</p>
<p>Gean is my friend,<br>she is a gnome,<br>she lives in my garden,<br>in back,<br>at home.</p>
<p>Gean’s job is simple,<br>She does it with ease.<br>She takes care of the carrots,<br>the squash,<br>the peas.</p>
<p>For this I give,<br>her a house to stay,<br>in my beautiful garden,<br>hidden away,<br>near the fence,<br>up the hill,<br>by the tree with the swing;<br>Gean plays,<br>violin with one lost string.</p>
<p>I digress from the title, to talk about Gean,<br>but maybe I’ll finish in a poem unseen.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Should I even start writing these poems?<br>What are they for?<br>What do they mean?<br>Maybe I’ll rap or tell them to Gean.</p>
<p>Gean ]]>
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2015" scheme="https://sam.ink//blog/2015/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[A Letter to the Person I Met at That Thing Last Weekend]]></title>
    <link href="https://sam.ink/blog/2014/a-letter-to-the-person-i-met-at-that-thing-last-weekend/"/>
    <id>https://sam.ink/blog/2014/a-letter-to-the-person-i-met-at-that-thing-last-weekend/</id>
    <published>2014-11-10T04:59:58.000Z</published>
    <updated>2015-12-17T18:04:35.000Z</updated>
    <content type="html"><![CDATA[<p>Dear Someone,</p>
<p>Sometimes in life we go to special events, or travel to far off places where we meet people who are friendly people, but are not good for much else. We have never met them before, and probably will never again. They are awesome don’t get me wrong, but the fact that they live half way across the country is kind of a hindrance to any sort of on going connection.</p>
<p>This happens more often then we like. In a perfect world, everyone I meet who is worth giving the time of day, would be right down the block. Able to just grab a cup of coffee every once in a while, and keep a connection, but in our world, people live around the globe, and most everyone on it is worth looking at your watch for.</p>
<p>In our world, when you stop talking to someone, the relationship decays. You lose touch, and some relationships are not easy to keep up. Traveling from LA to New York enough to keep up a friendship; good friendship is HARD, not to mention Expensive. This is why our friendship won’t work out. But if we did live close, if it was easy to see each other in person every so often, we could be the best of friends.</p>
<p>And so I sit here writing a letter to my would be best friend, or someone who, if I lived close to, might just have saved my life one day. I am writing to them to say thank you for our would be friendship, and your would be ability to have a greater effect on my life. And for the short period of time I did actually get to converse with you. I would like to express my gratitude that, if we live closer together, we would probably go exploring together, maybe go on a road trip.</p>
<p>I am taking the time to write this, because I would just like to say that we may have been the greatest of friends, however, because of the randomness of the Universe, our paths do not stay together that long, they only cross for that moment in time, and probably will never cross again.</p>
<p>And for that brief moment in time, our life was a shared experience. For this, I would like to thank you. And respectfully, I would like to say farewell. Farewell to our possible shared life, and good luck with your future, where ever that may lead.</p>
<p>Forever Distant,</p>
<p>Sam Schooler</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Dear Someone,</p>
<p>Sometimes in life we go to special events, or travel to far off places where we meet people who are friendly people,]]>
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2014" scheme="https://sam.ink//blog/2014/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Duluth and the North Shore]]></title>
    <link href="https://sam.ink/travel/2014/duluth/"/>
    <id>https://sam.ink/travel/2014/duluth/</id>
    <published>2014-08-12T19:00:07.000Z</published>
    <updated>2015-12-18T23:24:14.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="Travel" scheme="https://sam.ink//travel/"/>
    
      <category term="2014" scheme="https://sam.ink//travel/2014/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Los Angeles -> San Francisco]]></title>
    <link href="https://sam.ink/travel/2014/la-sf/"/>
    <id>https://sam.ink/travel/2014/la-sf/</id>
    <published>2014-04-10T19:00:00.000Z</published>
    <updated>2015-12-18T23:24:05.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="Travel" scheme="https://sam.ink//travel/"/>
    
      <category term="2014" scheme="https://sam.ink//travel/2014/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Bowrun]]></title>
    <link href="https://sam.ink/projects/bowrun/"/>
    <id>https://sam.ink/projects/bowrun/</id>
    <published>2014-03-05T19:10:00.000Z</published>
    <updated>2015-12-18T22:35:44.000Z</updated>
    <content type="html"><![CDATA[<p><em>Update March 2015: I’ve change the name from “Runbow” to “Bowrun” for legal reasons.</em></p>
<p>Hi my name is Sam Schooler and I’m an app developer.</p>
<img src="/projects/bowrun/cover.png" alt="Bowrun Screenshot" title="Bowrun Screenshot">
<p>I have been working with code since I was 12, and I made a gaming website, a few Minecraft plugins, and a ton of incomplete side projects. I have always wanted to create an iOS/Android app, and now, at 17, I’ve complete that goal.<br>I made a game called <a href="https://appsto.re/i66Y2k7" target="_blank" rel="external">Bowrun</a>, and I’m proud of it. Usually when one creates their first app, its… bad, however I feel, even though it is a simple concept with simple graphics, it still is an acceptable game.<br>I made Bowrun with <a href="http://libgdx.badlogicgames.com" target="_blank" rel="external">LibGDX</a>, a cross platform game framework enabling me to write the majority of the source in Java.</p>
<p>I got the idea for the game at 2am at my friends house, and proceeded to program the engine to generate the tiles of the top-scrolling game. Over the week following I created a menu screen, and a game over screen, I also implemented ads in hopes of breaking even with the $99/year I need to pay to be on the App Store. I uploaded it for approval on February 17th, and it got approved on Sunday, February 23rd around midnight. I released the Android version simultaneously in order to have the optimal effect. <strong>On the first day, I had 700 downloads; first week: 2.5K.</strong><br><a id="more"></a></p>
<h2 id="Welcome_to_the_High_School_3B_A_Pressure_Cooker_of_Apps"><a href="#Welcome_to_the_High_School_3B_A_Pressure_Cooker_of_Apps" class="headerlink" title="Welcome to the High School; A Pressure Cooker of Apps."></a>Welcome to the High School; A Pressure Cooker of Apps.</h2><p>This brings me to my advantage. I go to school. In a high school. With the same 2000 people. Every. Single. Day. An upwards of ~90% of my peers have smartphones, and almost all of them are either a iPhone or Android. When I was in 9th grade, I saw Snapchat take my school by storm. One week no one knew what it was, the next, everyone had it. This was when Snapchat was in the bottom 50 of the top free apps, and the spread of Snapchat was largely powered referrals through one friend telling another, over and over until most people had it, or knew about it. This is the incredible power of high school.</p>
<p>When my game was released, I went in full on marketing mode. I played my game anytime we had downtime in class, and because of the flamboyant colors, people were curious. They downloaded it, and played it. By Friday, 5 days after it was released, I figured 1 in 3 people at my school of 2000 had my game.</p>
<h2 id="We_Need_to_Jump_Ship"><a href="#We_Need_to_Jump_Ship" class="headerlink" title="We Need to Jump Ship."></a>We Need to Jump Ship.</h2><p>As downloads started to decrease everyday, I scrambled to find a way to maintain my high download rate. I figured, if I could find a way to get my app to another school, I could have the same thing happen. I learned that day the high school kids must have told their younger siblings, who also downloaded it because both middle schools now had it. But I was still only in my school district, so I needed to find a way out.</p>
<p>I had a real job once, and they have a Facebook page which is used to swap hours, and chat. I posted Bowrun on the page, and it was spread to 2 other schools, and 2 colleges. From there I left it alone to see what happens. The second week I got 1.8K, less than my debut week, but hey, from what I’ve heard, that a little bit more than most games made by high school students.</p>
<h2 id="GUYS_21_21_21_I_BROKE_THE_TOP_1000_21__u2026_IN_FREE_GAMES_21_in_the_US-_in_the-_arcade-_section__3A/"><a href="#GUYS_21_21_21_I_BROKE_THE_TOP_1000_21__u2026_IN_FREE_GAMES_21_in_the_US-_in_the-_arcade-_section__3A/" class="headerlink" title="GUYS!!! I BROKE THE TOP 1000! … IN FREE GAMES! in the US. in the.. arcade.. section :/"></a>GUYS!!! I BROKE THE TOP 1000! … IN FREE GAMES! in the US. in the.. arcade.. section :/</h2><p>Okay so maybe breaking 1000 in a specific game category isn’t that hard, but I was excited! This was my first app! As of this writing, Bowrun’s peak rating was 725 in US-Action Games, and 665 in US-Arcade. This was mostly aided and coincided with Bowrun being featured as a new app in these categories. Everyone would love to make it to number 1, but this gave me a perspective of the difficulty, and luck that goes into it.</p>
<p>I also at the time had already garnered sixty 5-star ratings, and only one joke 1-star rating. These were mostly from friends, but they are <a href="https://itunes.apple.com/us/app/runbow-game-endless-rainbows/id819028051?mt=8" target="_blank" rel="external">really funny to read</a>.</p>
<h2 id="Going_Forward"><a href="#Going_Forward" class="headerlink" title="Going Forward."></a>Going Forward.</h2><p>I am implementing a Dots style high score system which links scores to Twitter accounts, and showing scores from your Twitter friends. I am also going to fix the performance of the app, which is dismal on Android… I am going to try and take the concepts I learned from this simple app, and use the knowledge in order to create an app I’ve wanted to make for a while. Eventually, I will decode the gibberish (to me) that is known as Objective-C, if you have any recommended resources, I would love to know about them!</p>
<h2 id="Pitch-_Be_My_Friend_21"><a href="#Pitch-_Be_My_Friend_21" class="headerlink" title="Pitch. Be My Friend!"></a>Pitch. Be My Friend!</h2><p>Oh! Hey! I know you! We went to pre-school together! No? Oh, okay well you should download my game Bowrun on iOS <a href="https://appsto.re/i66Y2k7" target="_blank" rel="external">here</a>.</p>
<p>If you are a cool kid like me, and opted for an Android, you can download Bowrun <a href="https://play.google.com/store/apps/details?id=co.mycube.runbow" target="_blank" rel="external">here</a>.</p>
<p>I would love to hear any feedback you have, or tips. You can <a href="mailto:hello@sam.ink">email me</a>, or follow me, @samschooler, on twitter <a href="https://twitter.com/samschooler" target="_blank" rel="external">here</a>. Also if anyone asks, my high score is 40.8.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><em>Update March 2015: I’ve change the name from “Runbow” to “Bowrun” for legal reasons.</em></p>
<p>Hi my name is Sam Schooler and I’m an app developer.</p>
<img src="/projects/bowrun/cover.png" alt="Bowrun Screenshot" title="Bowrun Screenshot">
<p>I have been working with code since I was 12, and I made a gaming website, a few Minecraft plugins, and a ton of incomplete side projects. I have always wanted to create an iOS/Android app, and now, at 17, I’ve complete that goal.<br>I made a game called <a href="https://appsto.re/i66Y2k7">Bowrun</a>, and I’m proud of it. Usually when one creates their first app, its… bad, however I feel, even though it is a simple concept with simple graphics, it still is an acceptable game.<br>I made Bowrun with <a href="http://libgdx.badlogicgames.com">LibGDX</a>, a cross platform game framework enabling me to write the majority of the source in Java.</p>
<p>I got the idea for the game at 2am at my friends house, and proceeded to program the engine to generate the tiles of the top-scrolling game. Over the week following I created a menu screen, and a game over screen, I also implemented ads in hopes of breaking even with the $99/year I need to pay to be on the App Store. I uploaded it for approval on February 17th, and it got approved on Sunday, February 23rd around midnight. I released the Android version simultaneously in order to have the optimal effect. <strong>On the first day, I had 700 downloads; first week: 2.5K.</strong><br>]]>
    
    </summary>
    
      <category term="Projects" scheme="https://sam.ink//projects/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[About]]></title>
    <link href="https://sam.ink//about/"/>
    <id>https://sam.ink//about/</id>
    <published>2014-03-05T19:10:00.000Z</published>
    <updated>2015-12-18T23:03:26.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Hi_I_u2019m_Sam"><a href="#Hi_I_u2019m_Sam" class="headerlink" title="Hi I’m Sam."></a>Hi I’m Sam.</h1><h2 id="Sam_I_am"><a href="#Sam_I_am" class="headerlink" title="Sam I am."></a>Sam I am.</h2><h6 id="I_don_u2019t_like_spam"><a href="#I_don_u2019t_like_spam" class="headerlink" title="I don’t like spam."></a>I don’t like spam.</h6><p>I try to <a href="http://sam.ink/blog/">write</a>,<br>regarding the things,<br>learned,<br><a href="http://instagram.com/samschooler" target="_blank" rel="external">seen</a>,<br>heard,<br>along the way.</p>
<p>If I don’t,<br>I usually <a href="http://twitter.com/samschooler" target="_blank" rel="external">tweet</a>,<br>babbling on,<br>about things near.</p>
<p>In time I will get a job,<br>however today,<br>I want to play,<br><a href="http://github.com/quaz3l" target="_blank" rel="external">think</a>,<br>sing,<br>run,<br>fly.<br>I want to see what I can accomplish.</p>
<p>Throw off the bowlines,<br>set sail,<br>for a world unknown.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Hi_I_u2019m_Sam"><a href="#Hi_I_u2019m_Sam" class="headerlink" title="Hi I’m Sam."></a>Hi I’m Sam.</h1><h2 id="Sam_I_am"><a href="#S]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Implementing AdMob in RoboVM via MoPub]]></title>
    <link href="https://sam.ink/blog/2014/implementing-admob-in-robovm-via-mopub/"/>
    <id>https://sam.ink/blog/2014/implementing-admob-in-robovm-via-mopub/</id>
    <published>2014-02-16T21:32:00.000Z</published>
    <updated>2015-12-17T18:04:35.000Z</updated>
    <content type="html"><![CDATA[<p><em>UPDATED November 29th, 2014: Should work with LibGDX 1.X.X</em></p>
<p><a href="http://robovm.org" target="_blank" rel="external">RoboVM</a> is an amazing free framework for writing iOS Applications in Java. I built an app with LibGDX, which ties into RoboVM last week. I don’t feel that it is worth charging for, so I wanted to make it ad-supported. In order to do this, I needed to implement a native library from MoPub, a ad mediation network. I had a couple kinks, but I successfully implemented AdMob/MoPub, in both iOS and Android, and I want to share how I did it.</p>
<p>If you are only putting ads in a iOS app, only follow the steps labeled [iOS], or if you are doing only an Android app, follow the [Android] tag. Obviously, if you are making an app for both platforms, do everything.</p>
<h2 id="Creating_Your_Project"><a href="#Creating_Your_Project" class="headerlink" title="Creating Your Project"></a>Creating Your Project</h2><p>Make sure before you start, to follow the LibGDK Wiki on how to <a href="https://github.com/libgdx/libgdx/wiki/Project-Setup-Gradle" target="_blank" rel="external">Create a Project</a>. This will get you started with a LibGDX project. Then make sure to <a href="https://github.com/libgdx/libgdx/wiki/Gradle-and-Eclipse" target="_blank" rel="external">Import your Project Into Eclipse</a>.</p>
<h2 id="Getting_Our_Resources"><a href="#Getting_Our_Resources" class="headerlink" title="Getting Our Resources"></a>Getting Our Resources</h2><p>Started out by downloading the [iOS] <a href="http://libgdx.badlogicgames.com/robovm-ios-bindings/mopub-1.0.0-SNAPSHOT.jar" target="_blank" rel="external">RoboVM Bindings</a> and the [Android] <a href="https://github.com/mopub/mopub-android-sdk/archive/master.zip" target="_blank" rel="external">Full MoPub SDK</a>.</p>
<p>RoboVM bindings are basically “bridges” between the native iOS Objective-C and the sudo Objective-C Java RoboVM. This jar implements the Full MoPub iOS SDK, which allows us to get banners natively on iOS without writing a single line of Objective-C.</p>
<a id="more"></a>
<h2 id="Work_With_Gradle"><a href="#Work_With_Gradle" class="headerlink" title="Work With Gradle"></a>Work With Gradle</h2><p>In order for our project to recognize the MoPub SDK, we need to tell Gradle to include it in our builds.</p>
<p><strong>[Android]</strong><br>Open the build.gradle file in the root directory of your project, find the <code>project(&quot;:android&quot;)</code> section, and add <code>compile fileTree(dir: &#39;libs&#39;, include: &#39;*.jar&#39;)</code>. It should now look like this:<br><figure class="highlight"><figcaption><span>build.gradle</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">project(":android") &#123;</span><br><span class="line">    apply plugin: "android"</span><br><span class="line">    configurations &#123; natives &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        compile project(":core")</span><br><span class="line">        compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"</span><br><span class="line">        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"</span><br><span class="line">        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"</span><br><span class="line">        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"</span><br><span class="line">        compile fileTree(dir: 'libs', include: '*.jar')</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>[iOS]</strong><br>Next we need to find the <code>project(&quot;:ios&quot;)</code> section and add <code>compile fileTree(dir: &#39;build/libs&#39;, include: &#39;*.jar&#39;)</code>. It should now look like this:<br><figure class="highlight"><figcaption><span>build.gradle</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">project(":ios") &#123;</span><br><span class="line">    apply plugin: "java"</span><br><span class="line">    apply plugin: "robovm"</span><br><span class="line">    configurations &#123; natives &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        compile project(":core")</span><br><span class="line">        compile "org.robovm:robovm-rt:$&#123;roboVMVersion&#125;"</span><br><span class="line">        compile "org.robovm:robovm-cocoatouch:$&#123;roboVMVersion&#125;"</span><br><span class="line">        compile "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"</span><br><span class="line">        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"</span><br><span class="line">        compile fileTree(dir: 'build/libs', include: '*.jar')</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>[iOS/Android]</strong><br>Save this file. We are done with it. These changes allow Gradle to access the build directories that we placed the mopub bindings in.</p>
<p>In order to actually have Gradle build, we need to tell it to refresh. To do this, <strong>select all of your projects in eclipse, right click, Gradle &gt; Refresh All</strong></p>
<h2 id="Binding_the_Binding_to_the_iOS_Project__5BiOS_5D"><a href="#Binding_the_Binding_to_the_iOS_Project__5BiOS_5D" class="headerlink" title="Binding the Binding to the iOS Project [iOS]"></a>Binding the Binding to the iOS Project [iOS]</h2><p>In order for the ads to work on the device, we need to make sure the compiler knows that it needs to include the SDK. So copy the mopub-1.0.0-SNAPSHOT.jar you just downloaded to ios/build/libs/mopub-1.0.0-SNAPSHOT.jar. Then we need to add these lines to the ios/robovm.xml in order for the compiler to find it.<br><figure class="highlight xml"><figcaption><span>robovm.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Make sure your &lt;frameworks&gt; and &lt;weakFrameworks&gt; tag --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- looks exactly like this. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">frameworks</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>AddressBook<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>AddressBookUI<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>AudioToolbox<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>AVFoundation<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>CoreGraphics<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>CoreLocation<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>CoreMedia<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>CoreTelephony<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>EventKit<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>EventKitUI<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>iAd<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>MediaPlayer<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>MessageUI<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>MobileCoreServices<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>QuartzCore<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>Security<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>SystemConfiguration<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>OpenGLES<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>OpenAL<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>UIKit<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">frameworks</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">weakFrameworks</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>AdSupport<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>PassKit<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>Social<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>StoreKit<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">framework</span>&gt;</span>Twitter<span class="tag">&lt;/<span class="title">framework</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">weakFrameworks</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Add this in-between the two config blocks. Your final robovm.xml should resemble something like this: <a href="https://github.com/BlueRiverInteractive/robovm-ios-bindings/blob/master/mopub/robovm.xml" target="_blank" rel="external">robovm.xml</a>.</p>
<h2 id="Prepare_the_MoPub_SDK_for_the_Android_Project__5BAndroid_5D"><a href="#Prepare_the_MoPub_SDK_for_the_Android_Project__5BAndroid_5D" class="headerlink" title="Prepare the MoPub SDK for the Android Project [Android]"></a>Prepare the MoPub SDK for the Android Project [Android]</h2><p>In order to get ads on Android, we need to import the MoPub SDK.</p>
<p>In Eclipse, go to <strong>File &gt; Import &gt; General &gt; Existing Projects into Workspace</strong>. Next. Click “select archive file”. Browse to where you downloaded the MoPub SDK, and select it. Uncheck the “mopub-sample” project. Click Finish.</p>
<p>We just imported the MoPub SDK into eclipse, but it is not connected to our project at all. To connect it to our project, we need to create a JAR file to link to Gradle, just like we had with the iOS version.</p>
<p>Right click the “mopub-sdk” project &gt; Export &gt; Java &gt; JAR File. Next. <strong>Deselect “AndroidManifest.xml” in the right pane</strong>, this will cause errors if you don’t. For the export destination, select “YOURPROJECT/android/libs” Click Finish.</p>
<h2 id="Make_the_MoPub_SDK_Work_With_the_Android_Project__5BAndroid_5D"><a href="#Make_the_MoPub_SDK_Work_With_the_Android_Project__5BAndroid_5D" class="headerlink" title="Make the MoPub SDK Work With the Android Project [Android]"></a>Make the MoPub SDK Work With the Android Project [Android]</h2><p>Now that we have generated the MoPub SDK JAR, and place in in /android/libs/, we can now tell the Android project to use it.</p>
<p>In your project, open /android/AndroidManifest.xml.</p>
<p>In the <em>manifest</em> tag, add these lines:<br><figure class="highlight xml"><figcaption><span>AndroidManifest.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.INTERNET"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.ACCESS_NETWORK_STATE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.ACCESS_COARSE_LOCATION"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.WRITE_EXTERNAL_STORAGE"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>If you don’t want to have invasive permissions, you can remove <code>ACCESS_COARSE_LOCATION</code>, however, you will have slightly less earnings.</p>
<p>In the <em>application</em> tag, add these lines:<br><figure class="highlight xml"><figcaption><span>AndroidManifest.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">"com.mopub.mobileads.MoPubActivity"</span> <span class="attribute">android:configChanges</span>=<span class="value">"keyboardHidden|orientation"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">"com.mopub.mobileads.MraidActivity"</span> <span class="attribute">android:configChanges</span>=<span class="value">"keyboardHidden|orientation"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">"com.mopub.common.MoPubBrowser"</span> <span class="attribute">android:configChanges</span>=<span class="value">"keyboardHidden|orientation"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">"com.mopub.mobileads.MraidVideoPlayerActivity"</span> <span class="attribute">android:configChanges</span>=<span class="value">"keyboardHidden|orientation"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">"com.google.ads.AdActivity"</span> <span class="attribute">android:configChanges</span>=<span class="value">"keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">"com.millennialmedia.android.MMActivity"</span> <span class="attribute">android:theme</span>=<span class="value">"@android:style/Theme.Translucent.NoTitleBar"</span> <span class="attribute">android:configChanges</span>=<span class="value">"keyboardHidden|orientation|keyboard"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">"com.millennialmedia.android.VideoPlayer"</span> <span class="attribute">android:configChanges</span>=<span class="value">"keyboardHidden|orientation|keyboard"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>The MoPub SDK requires some extra permissions in order to work. It also adds a couple extra Activities, which allow the SDK to display ads.</p>
<h2 id="Implementing_Banners_on_iOS__5BiOS_5D"><a href="#Implementing_Banners_on_iOS__5BiOS_5D" class="headerlink" title="Implementing Banners on iOS [iOS]"></a>Implementing Banners on iOS [iOS]</h2><p>To implement the MoPub banners, we need to load an ad from MoPub when the application finishes launching. I only implement banner ads/ leaderboard ads, however if you want to implement interstitials, you can have a look at <a href="https://github.com/BlueRiverInteractive/robovm-ios-bindings/blob/master/mopub/src/org/robovm/bindings/mopub/sample/Sample.java" target="_blank" rel="external">the sample code</a>.<br><figure class="highlight java"><figcaption><span>IOSLauncher.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* public class IOSLauncher extends IOSApplication.Delegate */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String BANNER_AD_UNIT_ID = <span class="string">"BANNER SIZE iOS ID"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LEADERBOARD_AD_UNIT_ID = <span class="string">"LEADERBOARD SIZE iOS ID"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> CGSize AD_SIZE;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String AD_ID;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> adLoaded = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">private</span> UIViewController rootViewController;</span><br><span class="line"><span class="keyword">private</span> MPAdViewController adViewController;</span><br><span class="line"><span class="keyword">private</span> MPAdView banner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* protected IOSApplication createApplication() */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">didFinishLaunching</span> <span class="params">(UIApplication application, NSDictionary launchOptions)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>.didFinishLaunching(application, launchOptions);   </span><br><span class="line">  <span class="keyword">if</span>(UIScreen.getMainScreen().getBounds().size().width() &gt;= <span class="number">728</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">"Set as Leaderboard!"</span>);</span><br><span class="line">    AD_SIZE = MPConstants.MOPUB_LEADERBOARD_SIZE;</span><br><span class="line">    AD_ID = LEADERBOARD_AD_UNIT_ID;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">"Set as Banner!"</span>);</span><br><span class="line">    AD_SIZE = MPConstants.MOPUB_BANNER_SIZE;</span><br><span class="line">    AD_ID = BANNER_AD_UNIT_ID;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// We need a view controller to see ads.</span></span><br><span class="line">  <span class="comment">//rootViewController = new UIViewController();</span></span><br><span class="line">  <span class="comment">// If you are already using a UIWindow with a root view controller, get the root view controller (f.e. LibGDX):</span></span><br><span class="line">  rootViewController = application.getKeyWindow().getRootViewController();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Create a MoPub ad. In this case a banner, but you can make it any size you want.</span></span><br><span class="line">  banner = <span class="keyword">new</span> MPAdView(AD_ID, AD_SIZE);</span><br><span class="line">  <span class="comment">// Let's calculate our banner size. We need to do this because the resolution of a retina and normal device is different.</span></span><br><span class="line">  <span class="keyword">float</span> bannerWidth = UIScreen.getMainScreen().getBounds().size().width();</span><br><span class="line">  <span class="keyword">float</span> bannerHeight = bannerWidth / AD_SIZE.width() * AD_SIZE.height();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Let's set the frame (bounds) of our banner view. Remember on iOS view coordinates have their origin top-left.</span></span><br><span class="line">  <span class="comment">// Position banner on the top.</span></span><br><span class="line">  banner.setFrame(<span class="keyword">new</span> CGRect((UIScreen.getMainScreen().getBounds().size().width()/<span class="number">2</span>)-AD_SIZE.width()/<span class="number">2</span>, <span class="number">0</span>, bannerWidth, bannerHeight));</span><br><span class="line">  <span class="comment">// Position banner on the bottom.</span></span><br><span class="line">  <span class="comment">// banner.setFrame(new CGRect(0, UIScreen.getMainScreen().getBounds().size().height() - bannerHeight, bannerWidth, bannerHeight));</span></span><br><span class="line">  <span class="comment">// Let's color the background for testing, so we can see if it is positioned correctly, even if no ad is loaded yet.</span></span><br><span class="line">  <span class="comment">//banner.setBackgroundColor(new UIColor(1, 0, 0, 1)); // Remove this after testing.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// We use our custom ad view controller to notify for orientation changes.</span></span><br><span class="line">  adViewController = <span class="keyword">new</span> MPAdViewController(banner);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// The delegate for the banner. It is required to override getViewController() to get ads.</span></span><br><span class="line">  MPAdViewDelegate bannerDelegate = <span class="keyword">new</span> MPAdViewDelegate.Adapter() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UIViewController <span class="title">getViewController</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> adViewController;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  banner.setDelegate(bannerDelegate);</span><br><span class="line">  <span class="comment">// Add banner to our view controller.</span></span><br><span class="line">  adViewController.getView().addSubview(banner);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// We add the ad view controller to our root view controller.</span></span><br><span class="line">  rootViewController.addChildViewController(adViewController);</span><br><span class="line">  rootViewController.getView().addSubview(adViewController.getView());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(!adLoaded) &#123;</span><br><span class="line">    banner.loadAd();</span><br><span class="line">    adLoaded = <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Create a standard UIWindow at screen size, add the view controller and show it.</span></span><br><span class="line">  application.getKeyWindow().setRootViewController(rootViewController);</span><br><span class="line">  application.getKeyWindow().addSubview(rootViewController.getView());</span><br><span class="line">  application.getKeyWindow().makeKeyAndVisible();</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Your ad should work now, or at least show the demo ad from MoPub, if it does not, or crashes on click, try this with a clean project.</p>
<h2 id="Implementing_Banners_on_Android__5BAndroid_5D"><a href="#Implementing_Banners_on_Android__5BAndroid_5D" class="headerlink" title="Implementing Banners on Android [Android]"></a>Implementing Banners on Android [Android]</h2><p>In order to serve ads on Android, we need to completely re-work the “AndroidLauncher.java” for that reason, please back it up.</p>
<p>Open “/android/AndroidLauncher.java” in Eclipse, and make it look like this. Make sure to rename “MyExampleGame” on line 17<br><figure class="highlight java"><figcaption><span>AndroidLauncher.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AndroidLauncher</span> <span class="keyword">extends</span> <span class="title">AndroidApplication</span> </span>&#123;</span><br><span class="line">  MoPubView mAdView;</span><br><span class="line">  <span class="keyword">boolean</span> adLoaded = <span class="keyword">false</span>;</span><br><span class="line">  <span class="keyword">boolean</span> adShown = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">    RelativeLayout layout = <span class="keyword">new</span> RelativeLayout(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    requestWindowFeature(Window.FEATURE_NO_TITLE);</span><br><span class="line">    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,</span><br><span class="line">        WindowManager.LayoutParams.FLAG_FULLSCREEN);</span><br><span class="line">    getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);</span><br><span class="line"></span><br><span class="line">    MyExampleGame game = <span class="keyword">new</span> MyExampleGame();</span><br><span class="line"></span><br><span class="line">    View gameView = initializeForView(game, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    layout.addView(gameView);</span><br><span class="line"></span><br><span class="line">    mAdView = <span class="keyword">new</span> MoPubView(<span class="keyword">this</span>);</span><br><span class="line">    mAdView.setAdUnitId(<span class="string">"00000000000000000000000000000"</span>); <span class="comment">// Your MoPub Ad Unit ID</span></span><br><span class="line"></span><br><span class="line">    RelativeLayout.LayoutParams adParams =</span><br><span class="line">        <span class="keyword">new</span> RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT,</span><br><span class="line">            RelativeLayout.LayoutParams.WRAP_CONTENT);</span><br><span class="line">    adParams.addRule(RelativeLayout.ALIGN_PARENT_TOP);</span><br><span class="line">    adParams.addRule(RelativeLayout.CENTER_IN_PARENT);</span><br><span class="line"></span><br><span class="line">    layout.addView(mAdView, adParams);</span><br><span class="line"></span><br><span class="line">    setContentView(layout);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="annotation">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onPause();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onResume();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mAdView.destroy();</span><br><span class="line">    <span class="keyword">super</span>.onDestroy();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Your ad should work now, or at least show the demo ad from MoPub, if it does not, or crashes on click, try this with a clean project.</p>
<h2 id="Setting_Up_MoPub_to_Serve_Ads"><a href="#Setting_Up_MoPub_to_Serve_Ads" class="headerlink" title="Setting Up MoPub to Serve Ads"></a>Setting Up MoPub to Serve Ads</h2><p>In order to serve AdMob ads, we need to connect AdMob with MoPub. Login to <a href="https://app.mopub.com/account/login/?next=/dashboard/" target="_blank" rel="external">MoPub</a>, and navigate to <a href="https://app.mopub.com/networks/v2/" target="_blank" rel="external">Networks</a>. Click “Add Network”, and choose <a href="https://app.mopub.com/networks/v2/#networks/admob_native" target="_blank" rel="external">AdMob</a>. Login via OAuth, and accept the permissions. AdMob should now be connected, if its not, try OAuth in a different browser. Make a banner and a leaderboard ad in mopub for your app. Then create one banner on AdMob. Copy the Publisher ID for that banner into both Publisher ID fields for both the leaderboard, and the banner (the ids should look like this: “ca-app-pub-0000000000000000000/000000000”)<br>Now navigate to <a href="https://app.mopub.com/advertise/orders/" target="_blank" rel="external">Orders</a>, and Archive all “MoPub Demo Orders”. After a few hours, AdMob Ads should start appearing.</p>
<h2 id="28Optional_29_Show/Hide_Ads_At_Specific_Times"><a href="#28Optional_29_Show/Hide_Ads_At_Specific_Times" class="headerlink" title="(Optional) Show/Hide Ads At Specific Times"></a>(Optional) Show/Hide Ads At Specific Times</h2><p>In order to show/hide ads based on the current state of the application, we need to define two methods; showAd, and hideAd. They do what their names say.</p>
<p>To implement them in [iOS]:<br><figure class="highlight java"><figcaption><span>IOSLauncher.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Ads</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showAd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"Showing Ad!"</span>);</span><br><span class="line">  <span class="keyword">if</span>(!adLoaded) &#123;</span><br><span class="line">    banner.loadAd();</span><br><span class="line">    adLoaded = <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">float</span> bannerWidth = UIScreen.getMainScreen().getBounds().size().width();</span><br><span class="line">  <span class="keyword">float</span> bannerHeight = bannerWidth / AD_SIZE.width() * AD_SIZE.height();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Let's set the frame (bounds) of our banner view. Remember on iOS view coordinates have their origin top-left.</span></span><br><span class="line">  <span class="comment">// Position banner on the top.</span></span><br><span class="line">  banner.setFrame(<span class="keyword">new</span> CGRect((UIScreen.getMainScreen().getBounds().size().width()/<span class="number">2</span>)-AD_SIZE.width()/<span class="number">2</span>, <span class="number">0</span>, bannerWidth, bannerHeight));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hideAd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"Hiding Ad!"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">float</span> bannerWidth = UIScreen.getMainScreen().getBounds().size().width();</span><br><span class="line">  <span class="keyword">float</span> bannerHeight = bannerWidth / AD_SIZE.width() * AD_SIZE.height();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Let's set the frame (bounds) of our banner view. Remember on iOS view coordinates have their origin top-left.</span></span><br><span class="line">  <span class="comment">// Position banner above the top.</span></span><br><span class="line">  banner.setFrame(<span class="keyword">new</span> CGRect(<span class="number">0</span>, -bannerHeight, bannerWidth, bannerHeight));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>And in [Android]<br><figure class="highlight java"><figcaption><span>AndroidLauncher.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Ads</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showAd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(!adLoaded) &#123;</span><br><span class="line">        System.out.println(<span class="string">"Ad Loaded!"</span>);</span><br><span class="line">        mAdView.loadAd();</span><br><span class="line">        adLoaded = <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(!adShown) &#123;</span><br><span class="line">        System.out.println(<span class="string">"Ad Show!"</span>);</span><br><span class="line">        mAdView.setVisibility(View.VISIBLE);</span><br><span class="line">        adShown = <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hideAd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(adShown) &#123;</span><br><span class="line">    runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">      <span class="annotation">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mAdView.setVisibility(View.GONE);</span><br><span class="line">        System.out.println(<span class="string">"Ad Hide!"</span>);</span><br><span class="line">        adShown = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>We will place the ad above the top of the screen for safe keeping. We will not dispose that ad, because ads take a long time to load, and we don’t want to try and load an ad every time we show an ad.<br>Alright, so now that we have those methods, we need to call them. If you only have a RoboVM only app, it is pretty straight forward; just call the methods when you want to do the respective command.<br>If however, you have a LibGDX app like me, you will need to have a little more complex system.</p>
<h2 id="28Optional_29_Creating_Listeners_For_LibGDX_Applications"><a href="#28Optional_29_Creating_Listeners_For_LibGDX_Applications" class="headerlink" title="(Optional) Creating Listeners For LibGDX Applications"></a>(Optional) Creating Listeners For LibGDX Applications</h2><p>In order for the core project to communicate with the RoboVM project, the RoboVM project must contact it before it can act. We do this with events and listeners. First we create a Listener.java interface in the core LibGDX project which will be inherited by the listeners in the RoboVM project.<br><figure class="highlight java"><figcaption><span>Listener.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Listener</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> ListenerType <span class="title">type</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Then we need to create a manager to control, and keep track of all the listeners in the core project. We also need listener types which can be registered. This is the “ListenerType” enum.<br><figure class="highlight java"><figcaption><span>ListenerManager.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListenerManager</span> </span>&#123;</span><br><span class="line">  ArrayList&lt;Listener&gt; listeners;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">ListenerManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    listeners = <span class="keyword">new</span> ArrayList&lt;Listener&gt;();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Listener l)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(listeners == <span class="keyword">null</span>) &#123;</span><br><span class="line">      listeners = <span class="keyword">new</span> ArrayList&lt;Listener&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    listeners.add(l);</span><br><span class="line">    System.out.println(<span class="string">"Listener Added!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(ListenerType type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(Listener l : listeners) &#123;</span><br><span class="line">      <span class="keyword">if</span>(l.type() == type) &#123;</span><br><span class="line">        l.call();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">enum</span> ListenerType &#123;</span><br><span class="line">    SHOWAD, HIDEAD</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Once these files are created, we can go back to our RoboVM project which can now use the Listener class. We will create two files “ShowAdListener.java”, and “HideAdListener.java”, which will be triggered when the core project calls the proper methods.<br><figure class="highlight java"><figcaption><span>ShowAdListener.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShowAdListener</span> <span class="keyword">implements</span> <span class="title">com</span>.<span class="title">example</span>.<span class="title">Listener</span> </span>&#123;</span><br><span class="line">  IOSLauncher base;</span><br><span class="line">  <span class="annotation">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.base.showAd();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBase</span><span class="params">(RobovmLauncher base)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.base = base;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ListenerType <span class="title">type</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ListenerType.SHOWAD;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight java"><figcaption><span>HideAdListener.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HideAdListener</span> <span class="keyword">implements</span> <span class="title">com</span>.<span class="title">example</span>.<span class="title">Listener</span> </span>&#123;</span><br><span class="line">  RobovmLauncher base;</span><br><span class="line">  <span class="annotation">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.base.hideAd();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBase</span><span class="params">(RobovmLauncher base)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.base = base;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> ListenerType <span class="title">type</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ListenerType.HIDEAD;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>You need to change the implementation to the path of the Listener.java you created. Now we need to create an instance of each listener, and register them with the ListenerManager. Go to your RobovmLauncher, and modify the createApplication() method to look like this so the Game has a chance to get the listeners registered. Make sure to rename “MyExampleGame” to your main game class.<br><figure class="highlight java"><figcaption><span>IOSLauncher.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> IOSApplication <span class="title">createApplication</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  IOSApplicationConfiguration config = <span class="keyword">new</span> IOSApplicationConfiguration();</span><br><span class="line">  config.orientationLandscape = <span class="keyword">true</span>;</span><br><span class="line">  config.orientationPortrait = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">  game = <span class="keyword">new</span> MyExampleGame();</span><br><span class="line"></span><br><span class="line">  ShowAdListener show = <span class="keyword">new</span> ShowAdListener();</span><br><span class="line">  HideAdListener hide = <span class="keyword">new</span> HideAdListener();</span><br><span class="line"></span><br><span class="line">  show.setBase(<span class="keyword">this</span>);</span><br><span class="line">  hide.setBase(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">  game.addListener(show);</span><br><span class="line">  game.addListener(hide);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> IOSApplication(game, config);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>And do the same thing on [Android]. Between <code>MyExampleGame game = new MyExampleGame();</code> and <code>View gameView = initializeForView(game, true);</code> put this extra code:<br><figure class="highlight java"><figcaption><span>AndroidLauncher.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MyExampleGame game = new MyExampleGame();</span></span><br><span class="line"></span><br><span class="line">ShowAdListener show = <span class="keyword">new</span> ShowAdListener();</span><br><span class="line">HideAdListener hide = <span class="keyword">new</span> HideAdListener();</span><br><span class="line"></span><br><span class="line">show.setBase(<span class="keyword">this</span>);</span><br><span class="line">hide.setBase(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">game.addListener(show);</span><br><span class="line">game.addListener(hide);</span><br><span class="line"></span><br><span class="line"><span class="comment">// View gameView = initializeForView(game, true);</span></span><br></pre></td></tr></table></figure></p>
<p>Now that the listeners are setup, we can start showing/hiding ads! Go back to your core project, and find a place where you want to show the ad (Game Over Screen, Settings, etc.), and call the event from the ListenerManager.<br><figure class="highlight java"><figcaption><span>GameScreen.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* public void gameOver() &#123; */</span></span><br><span class="line">listenerManager.call(ListenerType.SHOWAD);</span><br><span class="line"><span class="comment">/* &#125; */</span></span><br></pre></td></tr></table></figure></p>
<p>and a place to hide the ad (when the game starts, main menu, etc.)<br><figure class="highlight java"><figcaption><span>GameScreen.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* public void newGame() &#123; */</span></span><br><span class="line">listenerManager.call(ListenerType.HIDEAD);</span><br><span class="line"><span class="comment">/* &#125; */</span></span><br></pre></td></tr></table></figure></p>
<p>Also make sure to create an instance of the ListenerManager, and add the addListener() method to your main game class before you try to call an event.<br><figure class="highlight java"><figcaption><span>MyExampleGame.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ListenerManager listenerManager;</span><br><span class="line"><span class="comment">/* public MyExampleGame() &#123; */</span></span><br><span class="line">listenerManager = <span class="keyword">new</span> ListenerManager();</span><br><span class="line"><span class="comment">/* &#125; */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addListener</span><span class="params">(Listener l)</span> </span>&#123;</span><br><span class="line">  listenerManager.add(l);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Cool! Now you should have AdMob ads running in your application, and the ability to show/hide the ad! If the demo ads are still showing, give it 24 hours.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><em>UPDATED November 29th, 2014: Should work with LibGDX 1.X.X</em></p>
<p><a href="http://robovm.org">RoboVM</a> is an amazing free framework for writing iOS Applications in Java. I built an app with LibGDX, which ties into RoboVM last week. I don’t feel that it is worth charging for, so I wanted to make it ad-supported. In order to do this, I needed to implement a native library from MoPub, a ad mediation network. I had a couple kinks, but I successfully implemented AdMob/MoPub, in both iOS and Android, and I want to share how I did it.</p>
<p>If you are only putting ads in a iOS app, only follow the steps labeled [iOS], or if you are doing only an Android app, follow the [Android] tag. Obviously, if you are making an app for both platforms, do everything.</p>
<h2 id="Creating_Your_Project"><a href="#Creating_Your_Project" class="headerlink" title="Creating Your Project"></a>Creating Your Project</h2><p>Make sure before you start, to follow the LibGDK Wiki on how to <a href="https://github.com/libgdx/libgdx/wiki/Project-Setup-Gradle">Create a Project</a>. This will get you started with a LibGDX project. Then make sure to <a href="https://github.com/libgdx/libgdx/wiki/Gradle-and-Eclipse">Import your Project Into Eclipse</a>.</p>
<h2 id="Getting_Our_Resources"><a href="#Getting_Our_Resources" class="headerlink" title="Getting Our Resources"></a>Getting Our Resources</h2><p>Started out by downloading the [iOS] <a href="http://libgdx.badlogicgames.com/robovm-ios-bindings/mopub-1.0.0-SNAPSHOT.jar">RoboVM Bindings</a> and the [Android] <a href="https://github.com/mopub/mopub-android-sdk/archive/master.zip">Full MoPub SDK</a>.</p>
<p>RoboVM bindings are basically “bridges” between the native iOS Objective-C and the sudo Objective-C Java RoboVM. This jar implements the Full MoPub iOS SDK, which allows us to get banners natively on iOS without writing a single line of Objective-C.</p>]]>
    
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2014" scheme="https://sam.ink//blog/2014/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Learn From Your Successes]]></title>
    <link href="https://sam.ink/blog/2013/learn-from-your-successes/"/>
    <id>https://sam.ink/blog/2013/learn-from-your-successes/</id>
    <published>2013-10-06T23:58:00.000Z</published>
    <updated>2015-12-17T18:04:35.000Z</updated>
    <content type="html"><![CDATA[<p>“Learn from your mistakes” is a common saying heard throughout life. You probably first heard it from a parent, but chances are you also hear it from friends, coworkers, or teachers at least once a month. It is a great idea, make something that was a bad choice worthwhile, as if you are walking at night, and that mistake lights a part of the path, no matter how faint the light, it helps you stay on course.</p>
<p>However mistakes are not the only place one can learn from. It surprises me that mistakes are so often seen by society as the best way to learn, while successes do not seem to be highlighted as much. Success is the ultimate goal of any project, product, objective, or idea. Although “success” my be abstract, you know when you achieve it, and know how to succeed next time.</p>
<p>Being able to learn to not do something is great, but to learn how something is done is way better, and more efficient. For example when I try to memorize my name, I know the first letter is S, but if I only knew what the first letter was not, I would have to memorize a whole lot more. This idea of learning from success, not just from failure is not new, but it should be seen more equal, to learning from mistakes.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>“Learn from your mistakes” is a common saying heard throughout life. You probably first heard it from a parent, but chances are you also ]]>
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2013" scheme="https://sam.ink//blog/2013/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Collecting Emails: The Elegant Way. With MailChimp]]></title>
    <link href="https://sam.ink/blog/2013/collecting-emails-the-elegant-way-with-mailchimp/"/>
    <id>https://sam.ink/blog/2013/collecting-emails-the-elegant-way-with-mailchimp/</id>
    <published>2013-08-19T15:59:00.000Z</published>
    <updated>2015-12-18T06:31:03.000Z</updated>
    <content type="html"><![CDATA[<p>I am starting on a new project called <a href="http://ficte.com" target="_blank" rel="external">Ficte</a> which will be a place to read and write short stories, poems, and other forms of creative writing. <em>Plug: If you feel you would like to try out the service when it is finished, <a href="http://ficte.com" target="_blank" rel="external">sign up to get notified here</a>.</em></p>
<p>In order to promote <a href="http://ficte.com" target="_blank" rel="external">Ficte</a>, I needed a splash page with a feature list, and a form to receive emails of people who are interested. I did not really want to go write a large back-end for this, so I went to <a href="http://eepurl.com/CEiWX" target="_blank" rel="external">MailChimp</a> (Disclaimer: Referral), which, to my surprise, was a free service for people who have a small amount of subscribers. I jumped on this, and went through the steps to setup a list. When I got to connecting my list with my splash page, I got a great <em>(sarcasm)</em> copy-and-paste form which when submitted, directed to MailChimp to confirm the subscription. This is something I did not like, so I caved on my idea of no back-end, and wrote a simple <abbr title="Node.js Framework">Express</abbr> app (which I will use for the rest of Ficte); This is how I did it.<br><a id="more"></a></p>
<h2 id="Setting_up_an_Express_app_in_Node-js"><a href="#Setting_up_an_Express_app_in_Node-js" class="headerlink" title="Setting up an Express app in Node.js"></a>Setting up an Express app in Node.js</h2><p><em><strong>I am going to assume you have <a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a> and NPM installed on an Unix machine, if not go <a href="http://nodejs.org/" target="_blank" rel="external">install them</a>.</strong></em></p>
<p>First thing we do, is to get a skeleton <abbr title="Node.js Framework">Express</abbr> app up and running. This is done in terminal by first changing the directory to your working directory, then execute the Express skeleton command which will generate the file hierarchy of a basic Express app. We also needed to install the dependencies so change the directory to the skeleton, then install them with NPM.</p>
<figure class="highlight bash"><figcaption><span>Creating an Express skeleton app</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> MY_WORKING_DIRECTORY</span><br><span class="line">express express-skeleton</span><br><span class="line"><span class="built_in">cd</span> express-skeleton</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>The skeleton does a great job setting up the file hierarchy, however it bloats the files with some unnecessary code to run the example app. The example app that this code creates can be seen on <a href="http://localhost:3000/" target="_blank" rel="external">localhost:3000</a>.</p>
<figure class="highlight bash"><figcaption><span>Previewing the skeleton</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node app</span><br></pre></td></tr></table></figure>
<p>It should look something like this:</p>
<img src="/blog/2013/collecting-emails-the-elegant-way-with-mailchimp/2013812-skeleton.png" alt="2013812-skeleton.png" title="">
<p>Now we can shutdown the node app by pressing <code>CTRL+C</code>. In order to speed up our workflow, I would suggest downloading <a href="https://github.com/remy/nodemon" target="_blank" rel="external">nodemon</a> which auto refreshes the node app. This can be done via NPM:<br><figure class="highlight bash"><figcaption><span>Installing nodemon (optional)</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nodemon</span><br></pre></td></tr></table></figure></p>
<p>Once it is installed globally, we can run it, and it will auto update when it detects changes.<br><figure class="highlight bash"><figcaption><span>Installing nodemon (optional)</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon app.js</span><br></pre></td></tr></table></figure></p>
<p><em>If nodemon does not run, or it cannot be found on your machine. Make sure NPM is in your path; add this snippet to your $PATH (<code>.bashrc</code> file), close and reopen terminal, and try again.</em></p>
<figure class="highlight bash"><figcaption><span>$PATH for node on OS X 10.8.4</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### Node Devlopment</span></span><br><span class="line"><span class="built_in">export</span> NODE_PATH=<span class="string">"/usr/local/lib/node"</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/share/npm/bin:<span class="variable">$PATH</span>"</span></span><br></pre></td></tr></table></figure>
<h2 id="Serving_a_HTML_page_with_Express_routes"><a href="#Serving_a_HTML_page_with_Express_routes" class="headerlink" title="Serving a HTML page with Express routes"></a>Serving a HTML page with Express routes</h2><p>Now that the administration stuff is down, we can write code! Before we do that lets figure out what our app needs to do:</p>
<ol>
<li>It needs to serve the HTML page which will hold our form</li>
<li>It needs to receive requests with the email value</li>
<li>It needs to forward the email address to MailChimp</li>
</ol>
<p>To serve the HTML page, we need to setup a route. Routes are pretty simple, but first we need to fix some things in  <code>app.js</code>. The server launch does not work well so we are replacing the line including <code>http.createServer(app)</code> until the end of the file with:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.listen(app.get(<span class="string">'port'</span>), <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Listening on "</span> + app.get(<span class="string">'port'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>This fixes issues I had launching the app with Heroku, foreman, and nodemon.</p>
<p>Next, we can create our index page. I prefer to use <a href="https://github.com/visionmedia/jade" target="_blank" rel="external">Jade</a> for a template engine, and that is the default template engine Express uses. To create the index page, open <code>views/index.jade</code>, this will show some default code. Replace that code with this simple html form (converted to Jade):<br><figure class="highlight"><figcaption><span>index.jade</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">!!! 5</span><br><span class="line">html(lang='en-us')</span><br><span class="line">head</span><br><span class="line">    link(rel='stylesheet', type='text/css', href='stylesheets/style.css')</span><br><span class="line">    title Signup for spam.</span><br><span class="line">    script(type='text/javascript', src='javascripts/splash.js')</span><br><span class="line">body</span><br><span class="line">h1 We will spam you.</span><br><span class="line">form(action='/s', method='POST')</span><br><span class="line">  input.email-text(type='email', name='email', placeholder='sam@example.com')</span><br><span class="line">  span.email-thanks.hide Now confirm your email</span><br><span class="line">  button(type='submit').email-submit GO</span><br><span class="line">  // This is for an AJAX loading indicator</span><br><span class="line">  .floatingBarsG.hide</span><br><span class="line">      .rotateG_01.blockG</span><br><span class="line">      .rotateG_02.blockG</span><br><span class="line">      .rotateG_03.blockG</span><br><span class="line">      .rotateG_04.blockG</span><br><span class="line">      .rotateG_05.blockG</span><br><span class="line">      .rotateG_06.blockG</span><br><span class="line">      .rotateG_07.blockG</span><br><span class="line">      .rotateG_08.blockG</span><br></pre></td></tr></table></figure></p>
<p>We now have our simple form which can be seen at <a href="http://localhost:3000" target="_blank" rel="external">localhost:3000</a>.</p>
<img src="/blog/2013/collecting-emails-the-elegant-way-with-mailchimp/2013812-form.png" alt="2013812-form.png" title="">
<p>The form is ugly right now, but with a little style in <code>public/stylesheets/style.css</code>, It can look pretty.<br><figure class="highlight css"><figcaption><span>style.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.email-text</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">border</span>:<span class="value"> none</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">outline</span>:<span class="value"> none</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">3px</span> double <span class="hexcolor">#CCC</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">2px</span> <span class="number">55px</span> <span class="number">0px</span> <span class="number">5px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">30px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">340px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-transition</span>:<span class="value"> background-color <span class="number">250ms</span> linear</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-moz-transition</span>:<span class="value"> background-color <span class="number">250ms</span> linear</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-o-transition</span>:<span class="value"> background-color <span class="number">250ms</span> linear</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-ms-transition</span>:<span class="value"> background-color <span class="number">250ms</span> linear</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">transition</span>:<span class="value"> background-color <span class="number">250ms</span> linear</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.email-submit</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> -<span class="number">60px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> none</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">border</span>:<span class="value"> none</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">font-weight</span>:<span class="value"> bold</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">30px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#999</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.email-submit</span><span class="pseudo">:hover</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#666</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="comment">/* Loader */</span></span><br><span class="line"><span class="class">.floatingBarsG</span><span class="rules">&#123;<span class="rule"><span class="attribute">position</span>:<span class="value">relative</span></span>;<span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">24px</span></span></span>;<span class="rule"><span class="attribute">height</span>:<span class="value"><span class="number">30px</span></span></span>;<span class="rule"><span class="attribute">margin-left</span>:<span class="value">-<span class="number">30px</span></span></span>;<span class="rule"><span class="attribute">display</span>:<span class="value">inline-block</span></span>;&#125;</span><span class="class">.blockG</span><span class="rules">&#123;<span class="rule"><span class="attribute">position</span>:<span class="value">absolute</span></span>;<span class="rule"><span class="attribute">background-color</span>:<span class="value"><span class="hexcolor">#fff</span></span></span>;<span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">4px</span></span></span>;<span class="rule"><span class="attribute">height</span>:<span class="value"><span class="number">9px</span></span></span>;<span class="rule"><span class="attribute">-moz-border-radius</span>:<span class="value"><span class="number">4px</span> <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span></span></span>;<span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">scale</span>(<span class="number">0.4</span>)</span></span>;<span class="rule"><span class="attribute">-moz-animation-name</span>:<span class="value">fadeG</span></span>;<span class="rule"><span class="attribute">-moz-animation-duration</span>:<span class="value">.<span class="number">64s</span></span></span>;<span class="rule"><span class="attribute">-moz-animation-iteration-count</span>:<span class="value">infinite</span></span>;<span class="rule"><span class="attribute">-moz-animation-direction</span>:<span class="value">linear</span></span>;<span class="rule"><span class="attribute">-webkit-border-radius</span>:<span class="value"><span class="number">4px</span> <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span></span></span>;<span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">scale</span>(<span class="number">0.4</span>)</span></span>;<span class="rule"><span class="attribute">-webkit-animation-name</span>:<span class="value">fadeG</span></span>;<span class="rule"><span class="attribute">-webkit-animation-duration</span>:<span class="value">.<span class="number">64s</span></span></span>;<span class="rule"><span class="attribute">-webkit-animation-iteration-count</span>:<span class="value">infinite</span></span>;<span class="rule"><span class="attribute">-webkit-animation-direction</span>:<span class="value">linear</span></span>;<span class="rule"><span class="attribute">-ms-border-radius</span>:<span class="value"><span class="number">4px</span> <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span></span></span>;<span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">scale</span>(<span class="number">0.4</span>)</span></span>;<span class="rule"><span class="attribute">-ms-animation-name</span>:<span class="value">fadeG</span></span>;<span class="rule"><span class="attribute">-ms-animation-duration</span>:<span class="value">.<span class="number">64s</span></span></span>;<span class="rule"><span class="attribute">-ms-animation-iteration-count</span>:<span class="value">infinite</span></span>;<span class="rule"><span class="attribute">-ms-animation-direction</span>:<span class="value">linear</span></span>;<span class="rule"><span class="attribute">-o-border-radius</span>:<span class="value"><span class="number">4px</span> <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span></span></span>;<span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">scale</span>(<span class="number">0.4</span>)</span></span>;<span class="rule"><span class="attribute">-o-animation-name</span>:<span class="value">fadeG</span></span>;<span class="rule"><span class="attribute">-o-animation-duration</span>:<span class="value">.<span class="number">64s</span></span></span>;<span class="rule"><span class="attribute">-o-animation-iteration-count</span>:<span class="value">infinite</span></span>;<span class="rule"><span class="attribute">-o-animation-direction</span>:<span class="value">linear</span></span>;<span class="rule"><span class="attribute">border-radius</span>:<span class="value"><span class="number">4px</span> <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span></span></span>;<span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">scale</span>(<span class="number">0.4</span>)</span></span>;<span class="rule"><span class="attribute">animation-name</span>:<span class="value">fadeG</span></span>;<span class="rule"><span class="attribute">animation-duration</span>:<span class="value">.<span class="number">64s</span></span></span>;<span class="rule"><span class="attribute">animation-iteration-count</span>:<span class="value">infinite</span></span>;<span class="rule"><span class="attribute">animation-direction</span>:<span class="value">linear</span></span>;&#125;</span><span class="class">.rotateG_01</span><span class="rules">&#123;<span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">0</span></span></span>;<span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">11px</span></span></span>;<span class="rule"><span class="attribute">-moz-animation-delay</span>:<span class="value">.<span class="number">24s</span></span></span>;<span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">90deg</span>)</span></span>;<span class="rule"><span class="attribute">-webkit-animation-delay</span>:<span class="value">.<span class="number">24s</span></span></span>;<span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">90deg</span>)</span></span>;<span class="rule"><span class="attribute">-ms-animation-delay</span>:<span class="value">.<span class="number">24s</span></span></span>;<span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">90deg</span>)</span></span>;<span class="rule"><span class="attribute">-o-animation-delay</span>:<span class="value">.<span class="number">24s</span></span></span>;<span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">90deg</span>)</span></span>;<span class="rule"><span class="attribute">animation-delay</span>:<span class="value">.<span class="number">24s</span></span></span>;<span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">90deg</span>)</span></span>;&#125;</span><span class="class">.rotateG_02</span><span class="rules">&#123;<span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">3px</span></span></span>;<span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">4px</span></span></span>;<span class="rule"><span class="attribute">-moz-animation-delay</span>:<span class="value">.<span class="number">32s</span></span></span>;<span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">45deg</span>)</span></span>;<span class="rule"><span class="attribute">-webkit-animation-delay</span>:<span class="value">.<span class="number">32s</span></span></span>;<span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">45deg</span>)</span></span>;<span class="rule"><span class="attribute">-ms-animation-delay</span>:<span class="value">.<span class="number">32s</span></span></span>;<span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">45deg</span>)</span></span>;<span class="rule"><span class="attribute">-o-animation-delay</span>:<span class="value">.<span class="number">32s</span></span></span>;<span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">45deg</span>)</span></span>;<span class="rule"><span class="attribute">animation-delay</span>:<span class="value">.<span class="number">32s</span></span></span>;<span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">45deg</span>)</span></span>;&#125;</span><span class="class">.rotateG_03</span><span class="rules">&#123;<span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">10px</span></span></span>;<span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">1px</span></span></span>;<span class="rule"><span class="attribute">-moz-animation-delay</span>:<span class="value">.<span class="number">4s</span></span></span>;<span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">0deg</span>)</span></span>;<span class="rule"><span class="attribute">-webkit-animation-delay</span>:<span class="value">.<span class="number">4s</span></span></span>;<span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">0deg</span>)</span></span>;<span class="rule"><span class="attribute">-ms-animation-delay</span>:<span class="value">.<span class="number">4s</span></span></span>;<span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">0deg</span>)</span></span>;<span class="rule"><span class="attribute">-o-animation-delay</span>:<span class="value">.<span class="number">4s</span></span></span>;<span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">0deg</span>)</span></span>;<span class="rule"><span class="attribute">animation-delay</span>:<span class="value">.<span class="number">4s</span></span></span>;<span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">0deg</span>)</span></span>;&#125;</span><span class="class">.rotateG_04</span><span class="rules">&#123;<span class="rule"><span class="attribute">right</span>:<span class="value"><span class="number">3px</span></span></span>;<span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">4px</span></span></span>;<span class="rule"><span class="attribute">-moz-animation-delay</span>:<span class="value">.<span class="number">48s</span></span></span>;<span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">45deg</span>)</span></span>;<span class="rule"><span class="attribute">-webkit-animation-delay</span>:<span class="value">.<span class="number">48s</span></span></span>;<span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">45deg</span>)</span></span>;<span class="rule"><span class="attribute">-ms-animation-delay</span>:<span class="value">.<span class="number">48s</span></span></span>;<span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">45deg</span>)</span></span>;<span class="rule"><span class="attribute">-o-animation-delay</span>:<span class="value">.<span class="number">48s</span></span></span>;<span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">45deg</span>)</span></span>;<span class="rule"><span class="attribute">animation-delay</span>:<span class="value">.<span class="number">48s</span></span></span>;<span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">45deg</span>)</span></span>;&#125;</span><span class="class">.rotateG_05</span><span class="rules">&#123;<span class="rule"><span class="attribute">right</span>:<span class="value"><span class="number">0</span></span></span>;<span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">11px</span></span></span>;<span class="rule"><span class="attribute">-moz-animation-delay</span>:<span class="value">.<span class="number">56s</span></span></span>;<span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">90deg</span>)</span></span>;<span class="rule"><span class="attribute">-webkit-animation-delay</span>:<span class="value">.<span class="number">56s</span></span></span>;<span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">90deg</span>)</span></span>;<span class="rule"><span class="attribute">-ms-animation-delay</span>:<span class="value">.<span class="number">56s</span></span></span>;<span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">90deg</span>)</span></span>;<span class="rule"><span class="attribute">-o-animation-delay</span>:<span class="value">.<span class="number">56s</span></span></span>;<span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">90deg</span>)</span></span>;<span class="rule"><span class="attribute">animation-delay</span>:<span class="value">.<span class="number">56s</span></span></span>;<span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">90deg</span>)</span></span>;&#125;</span><span class="class">.rotateG_06</span><span class="rules">&#123;<span class="rule"><span class="attribute">right</span>:<span class="value"><span class="number">3px</span></span></span>;<span class="rule"><span class="attribute">bottom</span>:<span class="value"><span class="number">3px</span></span></span>;<span class="rule"><span class="attribute">-moz-animation-delay</span>:<span class="value">.<span class="number">64s</span></span></span>;<span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">135deg</span>)</span></span>;<span class="rule"><span class="attribute">-webkit-animation-delay</span>:<span class="value">.<span class="number">64s</span></span></span>;<span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">135deg</span>)</span></span>;<span class="rule"><span class="attribute">-ms-animation-delay</span>:<span class="value">.<span class="number">64s</span></span></span>;<span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">135deg</span>)</span></span>;<span class="rule"><span class="attribute">-o-animation-delay</span>:<span class="value">.<span class="number">64s</span></span></span>;<span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">135deg</span>)</span></span>;<span class="rule"><span class="attribute">animation-delay</span>:<span class="value">.<span class="number">64s</span></span></span>;<span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">135deg</span>)</span></span>;&#125;</span><span class="class">.rotateG_07</span><span class="rules">&#123;<span class="rule"><span class="attribute">bottom</span>:<span class="value"><span class="number">0</span></span></span>;<span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">10px</span></span></span>;<span class="rule"><span class="attribute">-moz-animation-delay</span>:<span class="value">.<span class="number">72s</span></span></span>;<span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">180deg</span>)</span></span>;<span class="rule"><span class="attribute">-webkit-animation-delay</span>:<span class="value">.<span class="number">72s</span></span></span>;<span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">180deg</span>)</span></span>;<span class="rule"><span class="attribute">-ms-animation-delay</span>:<span class="value">.<span class="number">72s</span></span></span>;<span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">180deg</span>)</span></span>;<span class="rule"><span class="attribute">-o-animation-delay</span>:<span class="value">.<span class="number">72s</span></span></span>;<span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">180deg</span>)</span></span>;<span class="rule"><span class="attribute">animation-delay</span>:<span class="value">.<span class="number">72s</span></span></span>;<span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">180deg</span>)</span></span>;&#125;</span><span class="class">.rotateG_08</span><span class="rules">&#123;<span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">3px</span></span></span>;<span class="rule"><span class="attribute">bottom</span>:<span class="value"><span class="number">3px</span></span></span>;<span class="rule"><span class="attribute">-moz-animation-delay</span>:<span class="value">.<span class="number">8s</span></span></span>;<span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">135deg</span>)</span></span>;<span class="rule"><span class="attribute">-webkit-animation-delay</span>:<span class="value">.<span class="number">8s</span></span></span>;<span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">135deg</span>)</span></span>;<span class="rule"><span class="attribute">-ms-animation-delay</span>:<span class="value">.<span class="number">8s</span></span></span>;<span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">135deg</span>)</span></span>;<span class="rule"><span class="attribute">-o-animation-delay</span>:<span class="value">.<span class="number">8s</span></span></span>;<span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">135deg</span>)</span></span>;<span class="rule"><span class="attribute">animation-delay</span>:<span class="value">.<span class="number">8s</span></span></span>;<span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(-<span class="number">135deg</span>)</span></span>;&#125;</span>100%<span class="rules">&#123;<span class="rule"><span class="attribute">background-color</span>:<span class="value"><span class="hexcolor">#FFF</span></span></span>;&#125;</span><span class="class">.hide</span><span class="rules">&#123;<span class="rule"><span class="attribute">display</span>:<span class="value">none</span></span>;&#125;</span></span><br></pre></td></tr></table></figure></p>
<img src="/blog/2013/collecting-emails-the-elegant-way-with-mailchimp/2013812-pretty-form.png" alt="2013812-pretty-form.png" title="">
<p>Currently the form does no validation, redirects to the <code>/s</code> page which does not accept requests yet.</p>
<h2 id="Accepting_requests_and_sending_data_to_MailChimp"><a href="#Accepting_requests_and_sending_data_to_MailChimp" class="headerlink" title="Accepting requests and sending data to MailChimp"></a>Accepting requests and sending data to MailChimp</h2><p>To accept requests, we need to create a GET route for <code>/s</code>. This is easy, because the skeleton already setup a users route which we can simply rename to s. Replace the line with <code>app.get(&#39;/users&#39;, user.list);</code>, with:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">'/s'</span>, chimp.subscribe);</span><br></pre></td></tr></table></figure></p>
<p>This will crash your node app, so lets fix that quick by including the MailChimp API file. Replace the line that has <code>, user = require(&#39;./routes/user&#39;)</code> with:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">, chimp = <span class="built_in">require</span>(<span class="string">'./routes/chimp'</span>)</span><br></pre></td></tr></table></figure><br>The node app is probably still not working, so create the file it is trying to reference: <code>routes/chimp.js</code>. This is the file we are going to be using to connect with the MailChimp API. We need to include the MailChimp API, before we can reference it, we need to download it. To do this, go into <code>package.json</code>, and add mailchimp.</p>
<figure class="highlight js"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"application-name"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"0.0.1"</span>,</span><br><span class="line">  <span class="string">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"start"</span>: <span class="string">"node app.js"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"express"</span>: <span class="string">"3.3.4"</span>,</span><br><span class="line">    <span class="string">"jade"</span>: <span class="string">"*"</span>,</span><br><span class="line">    <span class="string">"mailchimp"</span>: <span class="string">"1.1.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Run <code>npm install</code> again. MailChimp is now in your application.</p>
<p>We need to include the API in <code>routs/chimp.js</code>, and include our API key (API keys can be found in your <a href="https://admin.mailchimp.com/account/api/" target="_blank" rel="external">account settings under extras</a>). This code below includes the MailChimp API, your API key. It creates a MailChimp instance, and checks for errors.</p>
<figure class="highlight js"><figcaption><span>chimp.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> MailChimpAPI = <span class="built_in">require</span>(<span class="string">'mailchimp'</span>).MailChimpAPI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> apiKey = <span class="string">'YOUR_API_KEY'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> api = <span class="keyword">new</span> MailChimpAPI(apiKey, &#123; version : <span class="string">'2.0'</span> &#125;);</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(error.message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Once our API is successfully included, we can write the <code>chimp.subscribe</code> function. This function is a publicly accessible function (The <code>exports</code> variable is public) that allows for a request to be sent with an email URL parameter, which is validated, and sent to MailChimp. For this code to work you need a MailChimp API key, and a List ID from a MailChimp list.</p>
<figure class="highlight js"><figcaption><span>chimp.js - subscribe function</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">exports.subscribe = <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.param(<span class="string">'email'</span>));</span><br><span class="line">  <span class="keyword">if</span> (req.param(<span class="string">'email'</span>)==<span class="string">""</span> || !<span class="regexp">/[a-z0-9!#$%&amp;'*+/=?^_`&#123;|&#125;~-]+(?:\.[a-z0-9!#$%&amp;'*+/=?^_`&#123;|&#125;~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/</span>.test(req.param(<span class="string">'email'</span>))) <span class="comment">/* ' */</span> &#123;</span><br><span class="line">    res.send(<span class="string">"error; email : '"</span>+ req.param(<span class="string">'email'</span>) + <span class="string">"';"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    api.call(<span class="string">'lists'</span>, <span class="string">'subscribe'</span>, &#123; id: <span class="string">"YOUR_LIST_ID"</span>, email: &#123; email: req.param(<span class="string">'email'</span>) &#125; &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error, data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error.message);</span><br><span class="line">        res.send(<span class="string">"error_chimp"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">        res.send(<span class="built_in">JSON</span>.stringify(data)); <span class="comment">// Do something with your data!</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>This should fix the errors that made the app crash. The app works at a basic level submitting a form, verifying the email, and sending it to MailChimp. This is great, however you end up on a blank page. To fix this, we can run the request with AJAX, instead of sending the user to the actual <code>/s</code> page.</p>
<h2 id="Submitting_a_form_via_AJAX"><a href="#Submitting_a_form_via_AJAX" class="headerlink" title="Submitting a form via AJAX"></a>Submitting a form via AJAX</h2><p>AJAX forms are quite simple. however the do require a little bit of client-side javascript. We need to create <code>public/javascripts/splash.js</code>. We will write our subscribe function, which validates the submitted email (the <a href="http://www.regular-expressions.info/email.html" target="_blank" rel="external">regex</a> accepts 99.99% of valid email addresses, which is fine for the average internet user), and sends it via <code>XMLHttpRequest</code> to <code>/s</code>, which sends the email to our list on MailChimp</p>
<figure class="highlight js"><figcaption><span>splash.js - AJAX subscribe function</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">HTMLElement.prototype.removeClass = <span class="function"><span class="keyword">function</span>(<span class="params">remove</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> newClassName = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">var</span> i;</span><br><span class="line">  <span class="keyword">var</span> classes = <span class="keyword">this</span>.className.split(<span class="string">" "</span>);</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; classes.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(classes[i] !== remove) &#123;</span><br><span class="line">      <span class="keyword">if</span>(i+<span class="number">1</span> == classes.length)</span><br><span class="line">        newClassName += classes[i];</span><br><span class="line">      <span class="keyword">else</span> newClassName += classes[i] + <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">this</span>.className = newClassName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> subscribe = <span class="function"><span class="keyword">function</span>(<span class="params">email</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> es = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"email-submit"</span>);</span><br><span class="line">  <span class="keyword">var</span> fb = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"floatingBarsG"</span>);</span><br><span class="line">  <span class="keyword">var</span> eb = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"email-text"</span>);</span><br><span class="line">  <span class="keyword">var</span> et = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"email-thanks"</span>);</span><br><span class="line">  es[<span class="number">0</span>].className += <span class="string">" hide"</span>;</span><br><span class="line">  fb[<span class="number">0</span>].removeClass(<span class="string">"hide"</span>);</span><br><span class="line">  eb[<span class="number">0</span>].removeClass(<span class="string">"error"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (email==<span class="string">""</span> || !<span class="regexp">/[a-z0-9!#$%&amp;'*+/=?^_`&#123;|&#125;~-]+(?:\.[a-z0-9!#$%&amp;'*+/=?^_`&#123;|&#125;~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/</span>.test(email)) <span class="comment">/* ' */</span> &#123;</span><br><span class="line"></span><br><span class="line">  fb[<span class="number">0</span>].className += <span class="string">" hide"</span>;</span><br><span class="line">  es[<span class="number">0</span>].removeClass(<span class="string">"hide"</span>);</span><br><span class="line">  eb[<span class="number">0</span>].style.backgroundColor = <span class="string">"#f4bfbf"</span>;</span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;eb[<span class="number">0</span>].style.backgroundColor = <span class="string">"#fff"</span>;&#125;, <span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">    xmlhttp=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  xmlhttp.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      es[<span class="number">0</span>].className += <span class="string">" hide"</span>;</span><br><span class="line">      fb[<span class="number">0</span>].className += <span class="string">" hide"</span>;</span><br><span class="line">      eb[<span class="number">0</span>].className += <span class="string">" hide"</span>;</span><br><span class="line">      et[<span class="number">0</span>].removeClass(<span class="string">"hide"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> params = <span class="string">"email="</span>+email;</span><br><span class="line">  xmlhttp.open(<span class="string">"POST"</span>,<span class="string">"s"</span>,<span class="literal">true</span>);</span><br><span class="line">  xmlhttp.setRequestHeader(<span class="string">"Content-type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">  xmlhttp.send(params);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Next, we need to call this when the form is submitted. This is done by capturing the click event of the “GO” button, and also capturing when the <code>Enter</code> key is pressed.</p>
<figure class="highlight js"><figcaption><span>splash.js - capturing events</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">document</span>.getElementsByClassName(<span class="string">"email-text"</span>)[<span class="number">0</span>].onkeypress = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(e.keyCode == <span class="number">13</span>) &#123;</span><br><span class="line">      e.preventDefault();</span><br><span class="line">      subscribe(e.target.value);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">document</span>.getElementsByClassName(<span class="string">"email-submit"</span>)[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    subscribe(e.target.parentNode.parentNode.getElementsByClassName(<span class="string">"email-text"</span>)[<span class="number">0</span>].value);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.addEventListener)&#123;</span><br><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>,init,<span class="literal">false</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">window</span>.attachEvent(<span class="string">'onload'</span>,init);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>That should pretty much do it. We now have a Node.js app which serves a form that takes emails, validates them, and submits them back to the app. The app then submits the email to MailChimp to be placed in a list.</p>
<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p>A demo can be seen on <a href="http://ficte.com" target="_blank" rel="external">ficte.com</a>, my new website, a welcoming platform to read and write short literature. If you like to read or write short fiction, you can <a href="http://ficte.com" target="_blank" rel="external">signup to get notified here</a>.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>I am starting on a new project called <a href="http://ficte.com">Ficte</a> which will be a place to read and write short stories, poems, and other forms of creative writing. <em>Plug: If you feel you would like to try out the service when it is finished, <a href="http://ficte.com">sign up to get notified here</a>.</em></p>
<p>In order to promote <a href="http://ficte.com">Ficte</a>, I needed a splash page with a feature list, and a form to receive emails of people who are interested. I did not really want to go write a large back-end for this, so I went to <a href="http://eepurl.com/CEiWX">MailChimp</a> (Disclaimer: Referral), which, to my surprise, was a free service for people who have a small amount of subscribers. I jumped on this, and went through the steps to setup a list. When I got to connecting my list with my splash page, I got a great <em>(sarcasm)</em> copy-and-paste form which when submitted, directed to MailChimp to confirm the subscription. This is something I did not like, so I caved on my idea of no back-end, and wrote a simple <abbr title="Node.js Framework">Express</abbr> app (which I will use for the rest of Ficte); This is how I did it.<br>]]>
    
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2013" scheme="https://sam.ink//blog/2013/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Pre-AP English 10: Perspective]]></title>
    <link href="https://sam.ink/blog/2013/preap-english-10-perspective/"/>
    <id>https://sam.ink/blog/2013/preap-english-10-perspective/</id>
    <published>2013-06-03T04:19:00.000Z</published>
    <updated>2015-12-17T18:04:35.000Z</updated>
    <content type="html"><![CDATA[<p><em>Disclaimer: This work was written based on criteria put forth in the “Race Reflection” rubric, which calls for opinionated thoughts. The opinions conveyed through this work are not to directly attack, or otherwise slander the teachers, administration, or any other persons associated with the creation or execution of the “Pre-AP English 10” curriculum (“The Authors”). This work was written to act as a critique of the curriculum, and was written with the intent to inform The Authors of an alternative perspective on “Pre-AP English 10”.</em></p>
<p>In Pre-AP English 10 this year, I learned about reading, and writing; the basics of any language arts class in history. However for the majority of the class, I learned about the meanings and themes behind other works. One theme that popped up more frequently than others was racism - societal trends that favor one race over another, and “whiteness” - one being privileged for being born white. I agree with parts of both of these statements, however, racism is more fluid than just purely being white people looking down from their pedestal on to people of other races, It is based on the circumstance.</p>
<blockquote><p>Society - The totality of social relationships among humans.</p>
<footer><strong>The Free Dictionary</strong><cite><a href="http://www.thefreedictionary.com/society" target="_blank" rel="external">Definition of Society</a></cite></footer></blockquote>
<p>If racism was created by society to favor people who are seen as white, why is it not defined as such? Would the definition not be “The favoring of white people against all other races”? This is how I see it based on how we are taught in this curriculum. The Pre-AP English way of describing racism, and prejudice does conflict with my point of view on racism, and prejudice, so in the following paragraphs I will critically analyze the two.<br><a id="more"></a><br>Now backing up, to learn about human instincts. When you meet a person you do not know, you judge them (regardless of if you want to or not). You judge them based on how they talk, how they walk, how they stand, what they are saying, and many more subtle social cues. Based on these judgments, you form a stereotype personalized just for their characteristics. These stereotypes, overtime, get reused by your brain for people who share similar characteristics to save time in judging someone. This is important because if someone is truly trying to kill you, you do not judge them, and you greet them like your friend; you are most likely dead. Stereotypes have earned a bad reputation over time, because of their ability to so quickly to become a prejudice. Prejudice is unproven evidence, and opinionated events that back an irrational view toward a person, or a group of people. Stereotypes are survival instincts formulated to protect us from death. Stereotypes by themselves are fine, because they protect us, however when they turn into prejudices, they become harmful.</p>
<p>_<a href="https://en.wikipedia.org/wiki/The_Road" target="_blank" rel="external">The Road</a>_ by Cormac McCarthy is an excellent example of how stereotypes can be an essential asset to survival. In the book, Papa and the Boy come upon the traveler; on first meeting him, Papa states warily “If this is an ambush, he [traveler] goes first.” (McCarthy, 162) This shows that the stereotype that everyone that they come upon should not be trusted is wrong, however does not turn into a prejudice once Papa meets the man.</p>
<p>If prejudice is formed by one, it is just that; one person judging someone too severely based on an unproven, irrational prejudice. However, if a majority group of people holds prejudice towards another minority group, it becomes racism.</p>
<p>Instead of educating on the idea of “whiteness”, which is propagated psychologically through people telling other people that “white people are better” (which is completely wrong), education should be focused more on correcting the issue. To carry this out, yes, people need to be educated that racism is apart of their lives, however, like the pollution, can be prevented enough to have an impact on society.</p>
<p>I believe that the texts studied throughout the year were exceedingly one sided in their view on race. I do think that the view of “whiteness” is accurate in these contexts, however this is not the whole picture. An examples of racism against white people can be found in South Africa, where Apartheid made many South Africans resent the white minority. When Apartheid broke down, white citizens lose a large amount of power, and were resented by the black majority. This small fact of the majority group holding prejudice against a minority group also exposes a flaw in the one sided argument that white people have the most power universally.</p>
<p>This idea is conveyed through the book _<a href="https://en.wikipedia.org/wiki/Friday_Night_Lights%3A_A_Town%2C_a_Team%2C_and_a_Dream" target="_blank" rel="external">Friday Night Lights</a>_ by H.G. Bissinger (which I do not own, so cannot directly quote), when conservative white citizens from rural Odessa, TX, describe liberals as the scum of the earth, and how they are all so wrong about everything they say. This is yet another example of how people look favorably on people who have similar views and characteristics as themselves, but look down on those who are different.</p>
<p>When no one group is a majority, the power is distributed more or less evenly. This can be seen in the documetary <em><a href="http://www.imdb.com/title/tt1559549/" target="_blank" rel="external">Restrepo</a></em>, which is about the U.S. Army in the Korangal Valley of northeast Afghanistan, because all of the soliders were trained in the same way, their views, are similar, therefore accept people around them in the army.</p>
<p>The reason I believe (based on facts, and examples from a variety of events and sources) that why white people seem to be favored here in my part of the United States, is that naturally humans like to be around people who are just like themselves (<a href="http://www.psychologicalscience.org/pdf/ps/genes_like.pdf" target="_blank" rel="external">Relevant</a>), their culture, their race, gender, political views, etc. This means that if there is a majority of white people in a room, naturally, the white people will have the most influence, and power, unless a minority shares similarities with more in the room.</p>
<h3 id="Essential_Questions"><a href="#Essential_Questions" class="headerlink" title="Essential Questions"></a>Essential Questions</h3><ul>
<li><p>What makes one race dominant over another?</p>
</li>
<li><p>What creates racism versus prejudice?</p>
</li>
<li><p>How can this be reversed in society?</p>
</li>
<li><p>Why does “whiteness” happen? Why are white people favored?</p>
</li>
<li><p>What are the differences between my point of view on racism, and Pre-AP English’s point of view?</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><em>Disclaimer: This work was written based on criteria put forth in the “Race Reflection” rubric, which calls for opinionated thoughts. The opinions conveyed through this work are not to directly attack, or otherwise slander the teachers, administration, or any other persons associated with the creation or execution of the “Pre-AP English 10” curriculum (“The Authors”). This work was written to act as a critique of the curriculum, and was written with the intent to inform The Authors of an alternative perspective on “Pre-AP English 10”.</em></p>
<p>In Pre-AP English 10 this year, I learned about reading, and writing; the basics of any language arts class in history. However for the majority of the class, I learned about the meanings and themes behind other works. One theme that popped up more frequently than others was racism - societal trends that favor one race over another, and “whiteness” - one being privileged for being born white. I agree with parts of both of these statements, however, racism is more fluid than just purely being white people looking down from their pedestal on to people of other races, It is based on the circumstance.</p>
<blockquote><p>Society - The totality of social relationships among humans.</p>
<footer><strong>The Free Dictionary</strong><cite><a href="http://www.thefreedictionary.com/society">Definition of Society</a></cite></footer></blockquote>
<p>If racism was created by society to favor people who are seen as white, why is it not defined as such? Would the definition not be “The favoring of white people against all other races”? This is how I see it based on how we are taught in this curriculum. The Pre-AP English way of describing racism, and prejudice does conflict with my point of view on racism, and prejudice, so in the following paragraphs I will critically analyze the two.<br>]]>
    
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2013" scheme="https://sam.ink//blog/2013/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Progression of My View on the Meaning of Life]]></title>
    <link href="https://sam.ink/blog/2013/progression-of-my-view-on-the-meaning-of-life/"/>
    <id>https://sam.ink/blog/2013/progression-of-my-view-on-the-meaning-of-life/</id>
    <published>2013-05-20T02:19:00.000Z</published>
    <updated>2015-12-17T18:04:35.000Z</updated>
    <content type="html"><![CDATA[<p>Throughout my life, I have thought a lot about the ultimate question “What is the answer to life, the universe and everything?”, or just “What is the meaning of life?” In my time alive, I have changed my point of view many times. From being a religious person, and praying often, to being a complete atheist, and nihilist, to coming up with my own perspective based on my past experiences, and ideas. Here is my perspective over time.<br><a id="more"></a></p>
<h2 id="Life_is_about_pleasing_god__280-9_years_old_29"><a href="#Life_is_about_pleasing_god__280-9_years_old_29" class="headerlink" title="Life is about pleasing god (0-9 years old)"></a>Life is about pleasing god (0-9 years old)</h2><p>Since I was born, I was raised with a largely religious parents, my mom more than dad, but religious nonetheless. We go to church every Sunday, and until I was 10 I did sincerely believe in the big man in the sky, and that he had a plan for me. I prayed, I went through Sunday school, and I didn’t mind coloring in Jesus and his disciples, or dyeing Easter Eggs. To be honest, I am not sure how I dropped the whole idea of god, but I think it has something to do with my education, and curiosity with science, and astronomy. Also I think once I figured out my great-grandparents are not living on top of the clouds, I think this sealed the deal.</p>
<h2 id="Life_is_about_nothing__28around_10_to_11_years_old_29"><a href="#Life_is_about_nothing__28around_10_to_11_years_old_29" class="headerlink" title="Life is about nothing (around 10 to 11 years old)"></a>Life is about nothing (around 10 to 11 years old)</h2><p>After I figured out Santa Claus, the Tooth Fairy, and Easter Bunny were not real, and god may not be either, I decided to become Atheist. I did some hard thinking, and came to the conclusion that life is a completely random event that could not possibly have meaning. I was depressed, I saw no point in doing anything, and I just went through the movements of life, not caring. This is also the point where I was dumped into middle school, which is just a holding pen for hormonal children (me included). I realized that I had no one to hang out with after school, or do things with on the weekends, this did not help my philosophy. This was the dark part of my otherwise happy life.</p>
<h2 id="Life_is_about_happiness__2812_to_14_years_old_29"><a href="#Life_is_about_happiness__2812_to_14_years_old_29" class="headerlink" title="Life is about happiness (12 to 14 years old)"></a>Life is about happiness (12 to 14 years old)</h2><p>Once I was placed in 7th grade, I became a lot happier, I joined the high school cross country team, swim team, and track team. I met really nice people, people that are genuine friends, and not just there to use you. I did more thinking throughout my middle school career, mostly about my philosophy, girls (yup, the hormones), and <a href="http://sam.mycube.co/2013/04/17/im-doing-it-wrong/" target="_blank" rel="external">messing around with computers</a>.</p>
<p>Now around the middle of this time period, I realized the key to my current thinking: “Life is about nothing, but nothing isn’t very exciting now is it? Let’s do something with it!” This is significant because it allows for me to define what my life is about, not trying to figure out what my destiny is. Happiness is an awesome meaning to life, but what I thought was that life was about finding pleasure, the high you get when you are on vacation, or with friends doing something amazing. This is perfectly good, but ultimate happiness can never be achieved because of how humans have evolved. We always feel that our life is missing something, it is the reason we are almost always seeking change, trying to earn more money, buy new things, or else we feel a vague feeling our life is missing something you can’t quite put a name on. <a href="http://www.discoverymedicine.com/Morten-L-Kringelbach/2010/06/25/the-functional-neuroanatomy-of-pleasure-and-happiness/" target="_blank" rel="external">Relevant</a></p>
<h2 id="Life_is_about_building_relationships_2C_and_helping_others__2815_to_16_years_old_29"><a href="#Life_is_about_building_relationships_2C_and_helping_others__2815_to_16_years_old_29" class="headerlink" title="Life is about building relationships, and helping others (15 to 16 years old)"></a>Life is about building relationships, and helping others (15 to 16 years old)</h2><p>These different concepts have come to shape what I think of life today, which is that Earth is here because of events in the past, we are alive because events in the past happened in our favor, but our destiny is in our hands, and it is up to us to solve what we would like to do with it. Some choose to destroy life, others to use life for their maximum enjoyment, but I believe that the best use is to use life to build relationships, and help others build meaning in their lives. This is what is the guiding thought in my life right now. I am very sure my meaning will change at some later date as I gain more experiences in life, but until then, I will be living out my life in good faith.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Throughout my life, I have thought a lot about the ultimate question “What is the answer to life, the universe and everything?”, or just “What is the meaning of life?” In my time alive, I have changed my point of view many times. From being a religious person, and praying often, to being a complete atheist, and nihilist, to coming up with my own perspective based on my past experiences, and ideas. Here is my perspective over time.<br>]]>
    
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2013" scheme="https://sam.ink//blog/2013/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[I'm Doing It Wrong]]></title>
    <link href="https://sam.ink/blog/2013/im-doing-it-wrong/"/>
    <id>https://sam.ink/blog/2013/im-doing-it-wrong/</id>
    <published>2013-04-18T03:00:00.000Z</published>
    <updated>2015-12-17T18:04:35.000Z</updated>
    <content type="html"><![CDATA[<p>I’ve been playing on computers since I was about 3, and played the stupid games kids play, like Reader Rabbit, Freddy Fish or whatever, and other things back when I still heard the word “CD-ROM”. That was fun and all, I was a kid, and I learned how to use a computer from those games. I also learned that to connect to the internet, the computer needed to call another computer on the phone, have a nice conversation about what they were doing thing weekend, how are the kids, then finally remember what they were making the call for, and connect me to the web.<br><a id="more"></a><br>When I was 8, I found Python, but not really. I found a tutorial online which showed me how to use Panda 3D to create a panda walking through a field, and copy and pasted ALL OF THE CODE, not even reading it, into my text editor, saving it, and running it to do exactly what the tutorial said. I showed it to my parents like it was some horrible paint splatter I made in kindergarten, yet saw it as an amazing feat of creativity; they looked at me and said “oh yes Sam, nice job…”, in that monotone voice they use when they are not impressed, but want me to think they were. I went back to playing Reader Rabbit.</p>
<p>When I was 10, I had one friend. His name was Danny, and he is the reason I am even writing this post on this journal no one reads, because he presented to me the now retired “&lt;center&gt;” tag. He showed me how to be a puppeteer of my very own puppet show, and it opened the gates to my creativity and self expression.</p>
<p>I loved games, so I wanted to create a flash game website (unique right?). I succeeded in stealing a few .SWF files for my website, and secured a .CO.CC domain. I also, of course, had no money since I was 10, so I found a free webhost, 000webhost.com I think it was. Writing this, I am actually surprised I managed to get that far, I even was able to follow the steps to setup DNS settings.</p>
<p>I remember writing the site, I had three pages, which I copied the idea from every other website; I had a “Home” page, a “Games” page (yes one page for all the swf files), and an “About” page - which nothing ever resided on. I didn’t know that index.html was the default page at first, so I had the home page at home.html, until I figured that out from other websites.</p>
<p>When I was 11, I discovered CSS, and as you can imagine, my website got a whole lot better. It got a BACKGROUND IMAGE! I also discovered interactivity first through javascript events inline with the HTML, like “onclick”, and “onmouseover”, this helped me make my buttons change from atrocious yellow to orange gradients, and blue Comic-Sans text, to the inverse to show that a mouse was on a button. Oh, did I mention all the images were made in MSPaint, and saved as bitmaps.</p>
<p>When I was 12, I figured out that the server actually did stuff when I looked at the source of another, much better gaming website to figure out how to create a login system, when I saw that no password stuff was in the source, I knew there was something else. This is when my use of PHP started. At first it was very primitive, and function based, no object-oriented programming in sight. I begged my mom to let me purchase a .com domain, but being 12, I was politely declined, so I went back to co.cc, and registered GameBrave.co.cc, which became a full fledged gaming website, which has the code almost unchanged since then at <a href="http://gamebrave.com" target="_blank" rel="external">gamebrave.com</a>.</p>
<p>GameBrave became my life. I kept updating, and improving the website. You can see the later versions (without style) on the <a href="http://web.archive.org/web/20100301000000*/http://gamebrave.com" target="_blank" rel="external">Wayback Machine</a>. I put all the data in a MySQL database, and I remember when I first set it up, and put in my credentials, I was worried people would be able to see them in plain text on the web like you would HTML.</p>
<p>I also started making flash games myself. I downloaded Flash Professional, the trial miraculously froze, and I developed 4 horrible games. 2 mouse maze games, a tower defense game, and a physics based “get to the exit” game (if you’re from Adobe, don’t sue my 12 year old self).</p>
<p><em>update (September 2014): I wrote this while I was mad at the internet for being mean to me. Everything below is not coherent.</em></p>
<p>That was my start, 6 years of mucking around with web stuff, then got into Java later with Minecraft, and developed qQuests, the most popular questing plugin at a time, but according to #coding on IRC, and many other places, making Minecraft plugins is not really coding, despite me having implemented best coding practice, and having my plugin include over 30 major original classes created by me, (EDIT: I picked the number of classes, because I thought it showed how much effort went into my project, however it is not the best metric).</p>
<p>I am writing this because I did it differently. I learned by copy and pasting novels of code, and did not read a single book, or take a single class. I love code, and would love to continue, but when I try to interact with anyone else in programming, I always get shutdown, voted down, reported, kicked, deleted, I even was made fun of by a guy who makes a living writing Java to cure cancer in New Zealand.</p>
<p>I hate how cheesy the word “Cyberbullying” is, but that is what it is. I try to reach out to other programmers for advice (yes advice, not code to copy and paste), yet every time, I get shut down.</p>
<p>I don’t like it.</p>
<p>So can the internet stop for a second, and think:</p>
<p>Maybe be nice for a change?</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>I’ve been playing on computers since I was about 3, and played the stupid games kids play, like Reader Rabbit, Freddy Fish or whatever, and other things back when I still heard the word “CD-ROM”. That was fun and all, I was a kid, and I learned how to use a computer from those games. I also learned that to connect to the internet, the computer needed to call another computer on the phone, have a nice conversation about what they were doing thing weekend, how are the kids, then finally remember what they were making the call for, and connect me to the web.<br>]]>
    
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2013" scheme="https://sam.ink//blog/2013/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[LibGDX and Bitmap Fonts]]></title>
    <link href="https://sam.ink/blog/2013/libgdx-and-bitmap-fonts/"/>
    <id>https://sam.ink/blog/2013/libgdx-and-bitmap-fonts/</id>
    <published>2013-03-20T21:01:00.000Z</published>
    <updated>2015-12-17T18:04:35.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://libgdx.badlogicgames.com/" target="_blank" rel="external">LibGDX</a> is an amazing tool to develop mobile applications cross-platform. I have been developing a mobile game for Android, and iOS, and it has worked very well so far despite some bumps. However there was one issue I had that I really did struggle with; that is text, and bitmap fonts.</p>
<p>In Objective-C it is fairly simple to write text on the screen, we call the system font, or a font from file, the text we would like to write, and the coordinate on screen. This is very straight forward unlike much of Objective-C. In Java, and with LibGDX, it is not as easy. To do this we need to create a bitmap font, which is not that easy in itself, then define a font from a picture, and a description file. Once we have that, we can define a font in Java:<br><figure class="highlight java"><figcaption><span>Defining a Bitmap Font in LibGDX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">private</span> SpriteBatch batch;</span><br><span class="line"><span class="keyword">private</span> BitmapFont font;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	batch = <span class="keyword">new</span> SpriteBatch();</span><br><span class="line">	font = <span class="keyword">new</span> BitmapFont(Gdx.files.internal(<span class="string">"data/schooler.fnt"</span>),Gdx.files.internal(<span class="string">"data/schooler.png"</span>),<span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><br>We also need to define a sprite batch which helps manage drawing efficiently. To draw text in the render method we need to start the sprite batch, then use the font to draw the text. This is where it gets more complex,<a id="more"></a> because we need to get the width and height of the text to find the exact position based on the width and height. This is why I create a new class called TextWrapper to handle all of this:<br><figure class="highlight java"><figcaption><span>TextWrapper.class</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> me.quaz3l.testgame.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.badlogic.gdx.graphics.g2d.BitmapFont;</span><br><span class="line"><span class="keyword">import</span> com.badlogic.gdx.graphics.g2d.SpriteBatch;</span><br><span class="line"><span class="keyword">import</span> com.badlogic.gdx.math.Vector2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TextWrapper</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> String text;</span><br><span class="line">	<span class="keyword">private</span> Vector2 position;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> width;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> height;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">TextWrapper</span><span class="params">(String text,Vector2 position)</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.text = text;</span><br><span class="line">		<span class="keyword">this</span>.position = position;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(SpriteBatch sp,BitmapFont fnt)</span></span>&#123;</span><br><span class="line">		width=(<span class="keyword">int</span>)fnt.getBounds(text).width; <span class="comment">//Get the width of the text we draw using the current font</span></span><br><span class="line">		height=(<span class="keyword">int</span>)fnt.getBounds(text).height; <span class="comment">//Get the height of the text we draw using the current font</span></span><br><span class="line">		fnt.draw(sp,text,position.x-width/<span class="number">2</span>, <span class="comment">// Get center value in x direction</span></span><br><span class="line">				position.y+height/<span class="number">2</span> <span class="comment">//Get center value in y direction</span></span><br><span class="line">				);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getText</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> text;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setText</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.text = text;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Vector2 <span class="title">getPosition</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> position;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPosition</span><span class="params">(Vector2 position)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.position = position;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWidth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> width;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getHeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> height;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>What this class does, is it handles the text rendering and positioning of a piece of text on the screen without the hassle of handling a spam of variables.</p>
<p>It is initialized with a String and Vector2 position, which is stored. The draw method is called when the text needs to be rendered. At this point we will supply the font it needs to be drawn with.</p>
<p>Next, we need to change and add a few things in the create method so we can instate the new class we just made.<br><figure class="highlight java"><figcaption><span>Instating the TextWrapper</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">private</span> SpriteBatch batch;</span><br><span class="line"><span class="keyword">private</span> BitmapFont font;</span><br><span class="line"><span class="keyword">private</span> TextWrapper text;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	batch = <span class="keyword">new</span> SpriteBatch();</span><br><span class="line">	font = <span class="keyword">new</span> BitmapFont(Gdx.files.internal(<span class="string">"data/schooler.fnt"</span>),Gdx.files.internal(<span class="string">"data/schooler.png"</span>),<span class="keyword">false</span>);</span><br><span class="line">	text = <span class="keyword">new</span> TextWrapper(<span class="string">"#YOLO"</span>, <span class="keyword">new</span> Vector2(<span class="number">100</span>, <span class="number">100</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><br>Now that we instated the TextWrapper class with a string and the position, we can now render the text with the draw method in the render method.<br><figure class="highlight java"><figcaption><span>Rendering Text With a Bitmap Font</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">render</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">// Clear the screen</span></span><br><span class="line">	Gdx.graphics.getGL10().glClearColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">	Gdx.graphics.getGL10().glClear(GL10.GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Begin our batch call</span></span><br><span class="line">	spriteBatch.begin();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Draw the text at the said position with the font defined</span></span><br><span class="line">	text.draw(spriteBatch, font);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Render our batched text</span></span><br><span class="line">	spriteBatch.end();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>This code should run, and will print out “#YOLO” at the point (100, 100) on the screen (NOTE: The origin is in the bottom left of the screen unlike normal game engines).</p>
<p>I wrote this because I have had trouble finding documentation to write text to the screen in LibGDX, in a few days, I will write a post about detecting touches, and creating buttons with the text.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://libgdx.badlogicgames.com/">LibGDX</a> is an amazing tool to develop mobile applications cross-platform. I have been developing a mobile game for Android, and iOS, and it has worked very well so far despite some bumps. However there was one issue I had that I really did struggle with; that is text, and bitmap fonts.</p>
<p>In Objective-C it is fairly simple to write text on the screen, we call the system font, or a font from file, the text we would like to write, and the coordinate on screen. This is very straight forward unlike much of Objective-C. In Java, and with LibGDX, it is not as easy. To do this we need to create a bitmap font, which is not that easy in itself, then define a font from a picture, and a description file. Once we have that, we can define a font in Java:<br><figure class="highlight java"><figcaption><span>Defining a Bitmap Font in LibGDX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">private</span> SpriteBatch batch;</span><br><span class="line"><span class="keyword">private</span> BitmapFont font;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	batch = <span class="keyword">new</span> SpriteBatch();</span><br><span class="line">	font = <span class="keyword">new</span> BitmapFont(Gdx.files.internal(<span class="string">"data/schooler.fnt"</span>),Gdx.files.internal(<span class="string">"data/schooler.png"</span>),<span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><br>We also need to define a sprite batch which helps manage drawing efficiently. To draw text in the render method we need to start the sprite batch, then use the font to draw the text. This is where it gets more complex,]]>
    
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2013" scheme="https://sam.ink//blog/2013/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Auto Memory Monitor for Geektool]]></title>
    <link href="https://sam.ink/blog/2013/auto-memory-monitor-for-geektool/"/>
    <id>https://sam.ink/blog/2013/auto-memory-monitor-for-geektool/</id>
    <published>2013-02-06T22:33:00.000Z</published>
    <updated>2015-12-17T18:04:35.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://projects.tynsoe.org/en/geektool/" target="_blank" rel="external">GeekTool</a> is an awesome tool I use on my desktop everyday. It lets you make amazing interactive desktops from the weather to your CPU usage, a geek is at home. This tool is great, but when it comes to memory usage; it sucks. This is why I made a quick geeklet (an interactive piece for geektool).</p>
<p>It&nbsp;surprised&nbsp;me that no one has made something similar. What This does is it checks the memory usage of <a href="http://projects.tynsoe.org/en/geektool/" target="_blank" rel="external">GeekTool</a>, and if it is above a certain threshold, it restarts the app with a slight flicker, but nothing more noticeable.</p>
<h3 id="To_make_this_work"><a href="#To_make_this_work" class="headerlink" title="To make this work"></a>To make this work</h3><ol>
<li><a href="https://github.com/quaz3l/GeekTools/blob/master/Scripts/GeekToolSelfMonitor.scpt?raw=true" target="_blank" rel="external">Download this script (Will Download)</a></li>
<li>Change the threshold to what you like</li>
<li>Move the file to where you like</li>
<li><a href="https://github.com/quaz3l/GeekTools/raw/master/Geeklets/Monitor.glet?download=true" target="_blank" rel="external">Download this geeklet (Will Download)</a></li>
<li>Edit the geeklet command to point to your script you downloaded</li>
<li>Upvote my post on <a href="http://www.macosxtips.co.uk/geeklets/system/auto-memory-monitor-for-geektool/" target="_blank" rel="external">macosxtips here</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://projects.tynsoe.org/en/geektool/" target="_blank" rel="external">GeekTool</a> is an awesome tool I use on my desktop ever]]>
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2013" scheme="https://sam.ink//blog/2013/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Trello Is an Awesome Task Manager]]></title>
    <link href="https://sam.ink/blog/2013/trello-is-an-awesome-task-manager/"/>
    <id>https://sam.ink/blog/2013/trello-is-an-awesome-task-manager/</id>
    <published>2013-01-08T00:15:00.000Z</published>
    <updated>2015-12-18T06:23:49.000Z</updated>
    <content type="html"><![CDATA[<p>I am working on my java skills in a fun way, developing plugin for <a href="http://bukkit.org" target="_blank" rel="external">Bukkit</a>, a popular Minecraft server. I called the plugin <a href="http://dev.bukkit.org/server-mods/project-34294/" target="_blank" rel="external">qQuests</a>, and it adds, as the name suggests, quests to the game. This has become a great undertaking, and I’ve learned a lot from it, like:</p>
<ul>
<li>How to collaborate on software without actually talking to your partners in person</li>
<li>How to manage big projects</li>
<li>The headaches of not being able to immediately update code like on the web</li>
<li>How to update code like on the web</li>
<li>How to program in Java in general</li>
</ul>
<p>The second, how I can manage a project, was really aided with a project managing tool called <a href="https://trello.com/quaz3l/recommend" target="_blank" rel="external">Trello</a> (This is a recommend link, and not a referral link; I do not get any personal gain from it). Trello is so amazing and intuitive, it allows me to separate tasks into boards, and create a card for  each task, which can hold comment, tags, a description, and many other properties, but still stays simple. The boards are collaborative, and are dynamically updated. I use Trello because of the simple, and easy to use interface, which makes managing qQuests a breeze.</p>
<p><a href="https://trello.com/quaz3l/recommend" target="_blank" rel="external">Go try Trello here!</a></p>
<p>I wrote this post completely unsolicited.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>I am working on my java skills in a fun way, developing plugin for <a href="http://bukkit.org" target="_blank" rel="external">Bukkit</a>,]]>
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2013" scheme="https://sam.ink//blog/2013/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[The Mayans Were Right, the Internet Will End]]></title>
    <link href="https://sam.ink/blog/2012/the-mayans-were-right-the-internet-will-end/"/>
    <id>https://sam.ink/blog/2012/the-mayans-were-right-the-internet-will-end/</id>
    <published>2012-12-05T01:40:34.000Z</published>
    <updated>2015-12-18T06:23:42.000Z</updated>
    <content type="html"><![CDATA[<p>You may or may not know, but the <a href="http://en.wikipedia.org/wiki/ITU" target="_blank" rel="external">ITU</a> (an organization of the worlds countries connected to the UN) will be negotiating  <a href="http://www.itu.int/en/wcit-12/Pages/default.aspx" target="_blank" rel="external">international telecom regulations</a>, and possibly end Net Neutrality, which means your service provider could charge you extra to visit “premium” sites like YouTube, and Facebook, etc. or slow down/stop any connection of their choosing. If you have not realized this is a HUGE issue! This would also allow your service provider to charge the website you are accessing to send you content, this would make prices of pay services like Netflix skyrocket, and force ad-based like Twitter, Facebook, and Google to either charge for their service, or plaster even more ads to your screen.</p>
<p>If you would like to keep your internet freedom, and prices down PLEASE send the ITU an email by signing up at <a href="http://www.internetcoup.org/" target="_blank" rel="external">internetcoup.org</a>. Thank you for supporting my freedom too!</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>You may or may not know, but the <a href="http://en.wikipedia.org/wiki/ITU" target="_blank" rel="external">ITU</a> (an organization of th]]>
    </summary>
    
      <category term="Blog" scheme="https://sam.ink//blog/"/>
    
      <category term="2012" scheme="https://sam.ink//blog/2012/"/>
    
  </entry>
  
</feed>
